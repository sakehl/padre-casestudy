resource test(int i) = i > 0;

void main(){
   loop_invariant i >= 0 && i <= 10;
   (∀* int j=0..10; Perm(&a[i], write))
   (∀* int j=0..10; Perm(&b[i], write))
   (∀* int j=0..10; Perm(&c[i], write))
   (∀* int j=0..10; &b[i])
   (∀* int j=0..10; &c[i])
   
  for(int i = 0; i < 10; i++){
    test(i);
  }

}

resource float_perm(float* xs) = (∀* int i=0..\pointer_length(xs); Perm(&xs[i], write));

 ghost
 requires a >= 0 && b > 0 && a < max_a;
 ensures a*b <= (max_a-1)*b;
 decreases b;
void lemma_nonlinear(int a, int b, int max_a){
 if(b>1){
   lemma_nonlinear(a, b-1, max_a);
   assert a*(b-1) <= max_a*(b-1);
 }
}