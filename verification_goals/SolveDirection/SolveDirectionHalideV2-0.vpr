domain WellFoundedOrder[T]  {
  
  function bounded(v: T): Bool 
  
  function decreasing(v1: T, v2: T): Bool 
}

domain IntOrder  {
  
  axiom {
    (forall i: Int ::0 <= i == (bounded(i): Bool))
  }
  
  axiom {
    (forall i: Int ::(forall j: Int ::i < j == (decreasing(i, j): Bool)))
  }
}

domain Void  {
  
  function unit(): Void 
  
  axiom {
    (forall v: Void ::true ==> unit() == v)
  }
}

domain $domain$unknown1  {
  
  function unknown1(unknown17: Perm): Bool interpretation "is_int"
}

domain $domain$to_int  {
  
  function to_int(to_int1: Perm): Int interpretation "to_int"
}

domain $domain$unknown5  {
  
  function unknown5(unknown18: Perm, unknown19: Perm): Perm interpretation "^"
}

domain Block  {
  
  function block_length(b: Block): Int 
  
  function loc(b: Block, i: Int): Ref 
  
  function loc_inv_1(r: Ref): Block 
  
  function loc_inv_2(r: Ref): Int 
  
  axiom {
    (forall b: Block ::block_length(b) >= 0)
  }
  
  axiom {
    (forall b: Block, i: Int ::
      { loc(b, i) }
      loc_inv_1(loc(b, i)) == b && loc_inv_2(loc(b, i)) == i)
  }
}

domain Pointer  {
  
  function pointer_of(b: Block, offset: Int): Pointer 
  
  function pointer_block(p: Pointer): Block 
  
  function pointer_offset(p: Pointer): Int 
  
  axiom {
    (forall p: Pointer ::pointer_offset(p) >= 0 &&
      pointer_offset(p) < block_length(pointer_block(p)))
  }
  
  axiom {
    (forall b: Block, offset: Int ::
      { pointer_block(pointer_of(b, offset)), pointer_offset(pointer_of(b, offset)) }
      pointer_block(pointer_of(b, offset)) == b &&
      pointer_offset(pointer_of(b, offset)) == offset)
  }
}

domain Any  {
  
  
}

domain Option[T1]  {
  
  function none1(): Option[T1] 
  
  function some(x: T1): Option[T1] 
  
  function option_get(opt: Option[T1]): T1 
  
  axiom {
    (forall x: T1 ::
      { (some(x): Option[T1]) }
      (none1(): Option[T1]) != (some(x): Option[T1]))
  }
  
  axiom {
    (forall x: T1 ::
      { (some(x): Option[T1]) }
      (option_get((some(x): Option[T1])): T1) == x)
  }
  
  axiom {
    (forall opt: Option[T1] ::
      { (some((option_get(opt): T1)): Option[T1]) }
      (some((option_get(opt): T1)): Option[T1]) == opt)
  }
}

domain Nothing  {
  
  
}

field int: Int

field dim2: Option[Pointer]

field ref: Ref

field host: Option[Pointer]

field dim1: Option[Pointer]

field extent: Int

field dim: Option[Pointer]

field stride: Int

field rat: Perm

field host2: Option[Pointer]

field min: Int

field dimensions: Int

field host1: Option[Pointer]

field dimensions2: Int

field dimensions1: Int

function unknown2(x: Perm): Perm
  decreases 
  ensures result == (unknown1(x) ? x : (to_int(x) + 1) * write / 1)


function unknown3(x: Perm): Perm
  decreases 
  ensures result == (0 * write / 1 <= x ? x : -x * write)


function unknown4(x: Perm): Perm
  decreases 
  ensures result == to_int(x) * write / 1


function unknown6(x: Perm, y: Perm): Perm
  decreases 
  ensures result == unknown5(x, y)


function unknown7(x: Perm): Perm
  decreases 
  ensures result == unknown5(x, 5 * write / 10)


function unknown8(x: Perm): Perm
  decreases 
  ensures !(x < 0 * write / 1 && unknown1(x - 5 * write / 10)) ==>
    result == to_int(x + 5 * write / 10) * write / 1
  ensures x < 0 * write / 1 && unknown1(x - 5 * write / 10) ==>
    result == x - 5 * write / 10


function ptrDeref(p: Pointer): Ref
  decreases 
{
  loc(pointer_block(p), pointer_offset(p))
}

function ptrAdd(p: Pointer, offset: Int): Pointer
  requires 0 <= pointer_offset(p) + offset
  requires pointer_offset(p) + offset < block_length(pointer_block(p))
  decreases 
{
  pointer_of(pointer_block(p), pointer_offset(p) + offset)
}

function anyAs(t: Any): Any
  decreases 


function asAny(t: Any): Any
  decreases 
  ensures anyAs(result) == t


function optGet(opt: Option[Any]): Any
  requires opt != (none1(): Option[Any])
  decreases 
  ensures (some(result): Option[Any]) == opt
{
  (option_get(opt): Any)
}

function optOrElse(opt: Option[Any], alt: Any): Any
  decreases 
  ensures opt == (none1(): Option[Any]) ==> result == alt
  ensures opt != (none1(): Option[Any]) ==> result == optGet(opt)
{
  (opt == (none1(): Option[Any]) ? alt : optGet(opt))
}

function max(x: Int, y: Int): Int
{
  (y < x ? x : y)
}

function min1(x: Int, y: Int): Int
{
  (y < x ? y : x)
}

function max1(x: Perm, y: Perm): Perm
{
  (y < x ? x : y)
}

function min2(x: Perm, y: Perm): Perm
{
  (y < x ? y : x)
}

function abs(x: Int): Int
{
  (0 <= x ? x : -x)
}

function abs1(x: Perm): Perm
{
  (0 * write / 1 <= x ? x : -x * write)
}

function hdiv(x: Int, y: Int): Int
{
  (y == 0 ? 0 : x / y)
}

function hmod(x: Int, y: Int): Int
{
  (y == 0 ? 0 : x % y)
}

function truncdiv(a: Int, b: Int): Int
  requires b != 0
  decreases 
{
  (let i ==
    (a / b) in
    (let i1 ==
      (a % b) in
      (0 <= a || i1 == 0 ? i : i + (0 < b ? 1 : -1))))
}

function truncmod(a: Int, b: Int): Int
  requires b != 0
  decreases 
{
  (let i ==
    (a % b) in
    (0 <= a || i == 0 ? i : i - (0 < b ? b : -b)))
}

function nothingAs(value: Nothing): Any
  decreases 


function nothingAs1(value: Nothing): Pointer
  decreases 


function optGet1(opt: Option[Nothing]): Nothing
  requires opt != (none1(): Option[Nothing])
  decreases 
  ensures (some(result): Option[Nothing]) == opt
{
  (option_get(opt): Nothing)
}

function optGet2(opt: Option[Pointer]): Pointer
  requires opt != (none1(): Option[Pointer])
  decreases 
  ensures (some(result): Option[Pointer]) == opt
{
  (option_get(opt): Pointer)
}

function scale(amount: Perm): Perm
  requires amount >= 0 * write
  decreases 
  ensures result >= 0 * write
{
  amount
}

function type(type1: Ref): Int
  decreases 
  ensures result >= 0
  ensures result <= 4
  ensures type1 == null ==> result == 0
  ensures type1 != null ==> result != 0


function subtype(subtype1: Int, subtype2: Int): Bool
  requires subtype1 >= 0
  requires subtype1 <= 4
  requires subtype2 >= 0
  requires subtype2 <= 4
  decreases 
{
  (subtype1 == 0 ==> true) &&
  ((subtype1 == 1 ==> subtype2 == 1) && (subtype1 == 3 ==> subtype2 == 3) &&
  (subtype1 == 4 ==> subtype2 == 4) &&
  (subtype1 == 2 ==> subtype2 == 2))
}

predicate floatPerm(xs: Option[Pointer]) {
  xs !=
  ((none1(): Option[Nothing]) == (none1(): Option[Nothing]) ?
    (none1(): Option[Pointer]) :
    (some(nothingAs1(optGet1((none1(): Option[Nothing])))): Option[Pointer])) &&
  (forall i: Int ::
    { (some(ptrAdd(optGet2(xs), i)): Option[Pointer]) }
    0 <= i &&
    i <
    block_length(pointer_block(optGet2(xs))) - pointer_offset(optGet2(xs)) ==>
    acc(ptrDeref(optGet2((some(ptrAdd(optGet2(xs), i)): Option[Pointer]))).rat, write))
}

predicate doublePerm(xs: Option[Pointer]) {
  xs !=
  ((none1(): Option[Nothing]) == (none1(): Option[Nothing]) ?
    (none1(): Option[Pointer]) :
    (some(nothingAs1(optGet1((none1(): Option[Nothing])))): Option[Pointer])) &&
  (forall i: Int ::
    { (some(ptrAdd(optGet2(xs), i)): Option[Pointer]) }
    0 <= i &&
    i <
    block_length(pointer_block(optGet2(xs))) - pointer_offset(optGet2(xs)) ==>
    acc(ptrDeref(optGet2((some(ptrAdd(optGet2(xs), i)): Option[Pointer]))).rat, write))
}

predicate intPerm(xs: Option[Pointer]) {
  xs !=
  ((none1(): Option[Nothing]) == (none1(): Option[Nothing]) ?
    (none1(): Option[Pointer]) :
    (some(nothingAs1(optGet1((none1(): Option[Nothing])))): Option[Pointer])) &&
  (forall i: Int ::
    { (some(ptrAdd(optGet2(xs), i)): Option[Pointer]) }
    0 <= i &&
    i <
    block_length(pointer_block(optGet2(xs))) - pointer_offset(optGet2(xs)) ==>
    acc(ptrDeref(optGet2((some(ptrAdd(optGet2(xs), i)): Option[Pointer]))).int, write))
}

predicate intPermBound(xs: Option[Pointer], lo: Int, hi: Int) {
  xs !=
  ((none1(): Option[Nothing]) == (none1(): Option[Nothing]) ?
    (none1(): Option[Pointer]) :
    (some(nothingAs1(optGet1((none1(): Option[Nothing])))): Option[Pointer])) &&
  (forall i: Int ::
    { (some(ptrAdd(optGet2(xs), i)): Option[Pointer]) }
    0 <= i &&
    i <
    block_length(pointer_block(optGet2(xs))) - pointer_offset(optGet2(xs)) ==>
    acc(ptrDeref(optGet2((some(ptrAdd(optGet2(xs), i)): Option[Pointer]))).int, write)) &&
  ((forall i: Int ::
    { ptrDeref(ptrAdd(optGet2(xs), i)).int }
    0 <= i &&
    i <
    block_length(pointer_block(optGet2(xs))) - pointer_offset(optGet2(xs)) ==>
    lo <= ptrDeref(ptrAdd(optGet2(xs), i)).int) &&
  (forall i: Int ::
    { ptrDeref(ptrAdd(optGet2(xs), i)).int }
    0 <= i &&
    i <
    block_length(pointer_block(optGet2(xs))) - pointer_offset(optGet2(xs)) ==>
    ptrDeref(ptrAdd(optGet2(xs), i)).int < hi))
}

predicate denominatorR(a: Int, aMin: Int, aExtent: Int, aStride: Int, si: Int,
  siMin: Int, siExtent: Int, siStride: Int, i: Int, iMin: Int, iExtent: Int,
  iStride: Int, data: Option[Pointer]) {
  aMin <= a && a < aMin + aExtent && siMin <= si && si < siMin + siExtent &&
  iMin <= i &&
  i < iMin + iExtent &&
  0 < aExtent &&
  0 < aStride &&
  0 < siExtent &&
  0 < siStride &&
  0 < iExtent &&
  0 < iStride &&
  siExtent * siStride <= aStride &&
  iExtent * iStride <= siStride &&
  data !=
  ((none1(): Option[Nothing]) == (none1(): Option[Nothing]) ?
    (none1(): Option[Pointer]) :
    (some(nothingAs1(optGet1((none1(): Option[Nothing])))): Option[Pointer])) &&
  block_length(pointer_block(optGet2(data))) -
  pointer_offset(optGet2(data)) ==
  aStride * aExtent &&
  acc(ptrDeref(optGet2((some(ptrAdd(optGet2(data), (a - aMin) * aStride +
  (si - siMin) * siStride +
  (i - iMin) * iStride)): Option[Pointer]))).rat, write)
}

method unknown(tid: Int, expression: Bool) returns (res: Void)
  requires expression


method unknown9(tid: Int, format: Option[Pointer]) returns (res: Int)


method unknown10(tid: Int, size: Int) returns (res: Option[Pointer])


method unknown11(tid: Int, ptr: Option[Pointer]) returns (res: Void)


method unknown12(tid: Int, a: Int, b: Int, maxA: Int) returns (res: Void)
  requires 0 <= a
  requires 0 < b
  requires a < maxA
  decreases b
  ensures a * b <= (maxA - 1) * b


method unknown13(tid: Int, a: Int, minA: Int, strideA: Int, extentA: Int, b: Int,
  minB: Int, strideB: Int, extentB: Int)
  returns (res: Void)
  requires minA <= a
  requires a - minA < extentA
  requires minB <= b
  requires b - minB < extentB
  requires 0 < strideA
  requires 0 < strideB
  requires extentA * strideA <= strideB
  decreases 
  ensures 0 <= (a - minA) * strideA + (b - minB) * strideB
  ensures (a - minA) * strideA + (b - minB) * strideB < strideB * extentB


method unknown14(tid: Int, a: Int, minA: Int, strideA: Int, extentA: Int, b: Int,
  minB: Int, strideB: Int, extentB: Int, c: Int, minC: Int, strideC: Int, extentC: Int)
  returns (res: Void)
  requires minA <= a
  requires a - minA < extentA
  requires minB <= b
  requires b - minB < extentB
  requires minC <= c
  requires c - minC < extentC
  requires 0 < strideA
  requires 0 < strideB
  requires 0 < strideC
  requires extentA * strideA <= strideB
  requires extentB * strideB <= strideC
  decreases 
  ensures 0 <=
    (a - minA) * strideA + (b - minB) * strideB + (c - minC) * strideC
  ensures (a - minA) * strideA + (b - minB) * strideB +
    (c - minC) * strideC <
    strideC * extentC


method unknown15(tid: Int, a: Int, minA: Int, strideA: Int, extentA: Int, b: Int,
  minB: Int, strideB: Int, extentB: Int, c: Int, minC: Int, strideC: Int, extentC: Int,
  d: Int, minD: Int, strideD: Int, extentD: Int)
  returns (res: Void)
  requires minA <= a
  requires a - minA < extentA
  requires minB <= b
  requires b - minB < extentB
  requires minC <= c
  requires c - minC < extentC
  requires minD <= d
  requires d - minD < extentD
  requires 0 < strideA
  requires 0 < strideB
  requires 0 < strideC
  requires 0 < strideD
  requires extentA * strideA <= strideB
  requires extentB * strideB <= strideC
  requires extentC * strideC <= strideD
  decreases 
  ensures 0 <=
    (a - minA) * strideA + (b - minB) * strideB + (c - minC) * strideC +
    (d - minD) * strideD
  ensures (a - minA) * strideA + (b - minB) * strideB +
    (c - minC) * strideC +
    (d - minD) * strideD <
    strideD * extentD


method unknown16(tid: Int, a: Int, minA: Int, strideA: Int, extentA: Int, b: Int,
  minB: Int, strideB: Int, extentB: Int, c: Int, minC: Int, strideC: Int, extentC: Int,
  d: Int, minD: Int, strideD: Int, extentD: Int, e: Int, minE: Int, strideE: Int,
  extentE: Int)
  returns (res: Void)
  requires minA <= a
  requires a - minA < extentA
  requires minB <= b
  requires b - minB < extentB
  requires minC <= c
  requires c - minC < extentC
  requires minD <= d
  requires d - minD < extentD
  requires minE <= e
  requires e - minE < extentE
  requires 0 < strideA
  requires 0 < strideB
  requires 0 < strideC
  requires 0 < strideD
  requires 0 < strideE
  requires extentA * strideA <= strideB
  requires extentB * strideB <= strideC
  requires extentC * strideC <= strideD
  requires extentD * strideD <= strideE
  decreases 
  ensures 0 <=
    (a - minA) * strideA + (b - minB) * strideB + (c - minC) * strideC +
    (d - minD) * strideD +
    (e - minE) * strideE
  ensures (a - minA) * strideA + (b - minB) * strideB +
    (c - minC) * strideC +
    (d - minD) * strideD +
    (e - minE) * strideE <
    strideE * extentE


method foldDenominatorR(tid: Int, a: Int, aMin: Int, aExtent: Int, aStride: Int,
  si: Int, siMin: Int, siExtent: Int, siStride: Int, i: Int, iMin: Int, iExtent: Int,
  iStride: Int, data: Option[Pointer])
  returns (res: Void)
  requires aMin <= a
  requires a < aMin + aExtent
  requires siMin <= si
  requires si < siMin + siExtent
  requires iMin <= i
  requires i < iMin + iExtent
  requires 0 < aExtent
  requires 0 < aStride
  requires 0 < siExtent
  requires 0 < siStride
  requires 0 < iExtent
  requires 0 < iStride
  requires siExtent * siStride <= aStride
  requires iExtent * iStride <= siStride
  requires data !=
    ((none1(): Option[Nothing]) == (none1(): Option[Nothing]) ?
      (none1(): Option[Pointer]) :
      (some(nothingAs1(optGet1((none1(): Option[Nothing])))): Option[Pointer]))
  requires block_length(pointer_block(optGet2(data))) -
    pointer_offset(optGet2(data)) ==
    aStride * aExtent
  requires (forall j: Int ::
      { (some(ptrAdd(optGet2(data), j)): Option[Pointer]) }
      0 <= j && j < aStride * aExtent ==>
      acc(ptrDeref(optGet2((some(ptrAdd(optGet2(data), j)): Option[Pointer]))).rat, write))
  ensures (forall a1: Int, si1: Int, i1: Int ::
      { denominatorR(a1, aMin, aExtent, aStride, si1, siMin, siExtent, siStride,
      i1, iMin, iExtent, iStride, data) }
      aMin <= a1 && a1 < aMin + aExtent && siMin <= si1 &&
      si1 < siMin + siExtent &&
      iMin <= i1 &&
      i1 < iMin + iExtent ==>
      acc(denominatorR(a1, aMin, aExtent, aStride, si1, siMin, siExtent, siStride,
      i1, iMin, iExtent, iStride, data), write))
{
  {
    var exc: Ref
    var return: Void
    var a0: Int
    var si0: Int
    var i0: Int
    var flatten: Int
    var flatten1: Int
    var flatten2: Int
    var excbeforeloop: Ref
    var excbeforeloop1: Ref
    var excbeforeloop2: Ref
    exc := null
    label LOOP
    excbeforeloop := exc
    a0 := aMin
    while (a0 < aMin + aExtent)
      invariant exc == excbeforeloop 
    {
      label LOOP1
      excbeforeloop1 := exc
      si0 := siMin
      while (si0 < siMin + siExtent)
        invariant exc == excbeforeloop1
        invariant (forall si1: Int, i1: Int ::
            { denominatorR(a, aMin, aExtent, aStride, si1, siMin, siExtent,
            siStride, i1, iMin, iExtent, iStride, data) }
            siMin <= si1 && si1 < siMin + siExtent && iMin <= i1 &&
            i1 < iMin + iExtent ==>
            acc(denominatorR(a, aMin, aExtent, aStride, si1, siMin, siExtent,
            siStride, i1, iMin, iExtent, iStride, data), write)) 
      {
        label LOOP2
        excbeforeloop2 := exc
        i0 := iMin
        while (i0 < iMin + iExtent)
          invariant exc == excbeforeloop2
          invariant (forall i1: Int ::
              { denominatorR(a, aMin, aExtent, aStride, si, siMin, siExtent,
              siStride, i1, iMin, iExtent, iStride, data) }
              iMin <= i1 && i1 < i0 + 1 ==>
              acc(denominatorR(a, aMin, aExtent, aStride, si, siMin, siExtent,
              siStride, i1, iMin, iExtent, iStride, data), write)) 
        {
          fold acc(denominatorR(a0, aMin, aExtent, aStride, si0, siMin, siExtent,
            siStride, i0, iMin, iExtent, iStride, data), write)
          flatten2 := i0
          i0 := i0 + 1
        }
        flatten1 := si0
        si0 := si0 + 1
      }
      flatten := a0
      a0 := a0 + 1
    }
    label END
    res := return
    label BUBBLE
    assert exc == null
  }
}

method make_pointer_array_float32(tid: Int, size: Int)
  returns (res: Option[Pointer])
  requires 0 <= size
  ensures res !=
    ((none1(): Option[Nothing]) == (none1(): Option[Nothing]) ?
      (none1(): Option[Pointer]) :
      (some(nothingAs1(optGet1((none1(): Option[Nothing])))): Option[Pointer]))
  ensures block_length(pointer_block(optGet2(res))) == size
  ensures pointer_offset(optGet2(res)) == 0
  ensures (forall i: Int ::
      { ptrDeref(ptrAdd(optGet2(res), i)).rat }
      0 <= i && i < size ==>
      acc(ptrDeref(optGet2((some(ptrAdd(optGet2(res), i)): Option[Pointer]))).rat, write))


method solveDirection(tid: Int, solBuffer: Option[Pointer], solutionMapBuffer: Option[Pointer],
  ant1Buffer: Option[Pointer], ant2Buffer: Option[Pointer], modelBuffer: Option[Pointer],
  vResInBuffer: Option[Pointer], p0: Int, p1: Int, p3: Int, p2: Int, p4: Int,
  nextSolutionsComplexBuffer: Option[Pointer])
  returns (res: Int)
  requires (let buf ==
      (solBuffer) in
      (let p ==
        (1 * write / 2) in
        (let nDims ==
          (4) in
          buf !=
          ((none1(): Option[Nothing]) == (none1(): Option[Nothing]) ?
            (none1(): Option[Pointer]) :
            (some(nothingAs1(optGet1((none1(): Option[Nothing])))): Option[Pointer])) &&
          block_length(pointer_block(optGet2(buf))) -
          pointer_offset(optGet2(buf)) ==
          1 &&
          acc(ptrDeref(optGet2(buf)).ref, p) &&
          acc(ptrDeref(ptrAdd(optGet2(buf), 0)).ref.dim, p) &&
          ptrDeref(ptrAdd(optGet2(buf), 0)).ref.dim !=
          ((none1(): Option[Nothing]) == (none1(): Option[Nothing]) ?
            (none1(): Option[Pointer]) :
            (some(nothingAs1(optGet1((none1(): Option[Nothing])))): Option[Pointer])) &&
          block_length(pointer_block(optGet2(ptrDeref(ptrAdd(optGet2(buf), 0)).ref.dim))) -
          pointer_offset(optGet2(ptrDeref(ptrAdd(optGet2(buf), 0)).ref.dim)) ==
          nDims &&
          acc(ptrDeref(ptrAdd(optGet2(buf), 0)).ref.host, p) &&
          ptrDeref(ptrAdd(optGet2(buf), 0)).ref.host !=
          ((none1(): Option[Nothing]) == (none1(): Option[Nothing]) ?
            (none1(): Option[Pointer]) :
            (some(nothingAs1(optGet1((none1(): Option[Nothing])))): Option[Pointer])))))
  requires (let dim3 ==
      (ptrDeref(ptrAdd(optGet2(solBuffer), 0)).ref.dim) in
      (let p ==
        (1 * write / 2) in
        (let i ==
          (0) in
          acc(ptrDeref(optGet2((some(ptrAdd(optGet2(dim3), i)): Option[Pointer]))).ref, 1 *
          write /
          2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.min, 1 * write / 2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.stride, 1 * write / 2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.extent, 1 * write / 2))))
  requires (let dim3 ==
      (ptrDeref(ptrAdd(optGet2(solBuffer), 0)).ref.dim) in
      (let p ==
        (1 * write / 2) in
        (let i ==
          (1) in
          acc(ptrDeref(optGet2((some(ptrAdd(optGet2(dim3), i)): Option[Pointer]))).ref, 1 *
          write /
          2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.min, 1 * write / 2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.stride, 1 * write / 2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.extent, 1 * write / 2))))
  requires (let dim3 ==
      (ptrDeref(ptrAdd(optGet2(solBuffer), 0)).ref.dim) in
      (let p ==
        (1 * write / 2) in
        (let i ==
          (2) in
          acc(ptrDeref(optGet2((some(ptrAdd(optGet2(dim3), i)): Option[Pointer]))).ref, 1 *
          write /
          2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.min, 1 * write / 2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.stride, 1 * write / 2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.extent, 1 * write / 2))))
  requires (let dim3 ==
      (ptrDeref(ptrAdd(optGet2(solBuffer), 0)).ref.dim) in
      (let p ==
        (1 * write / 2) in
        (let i ==
          (3) in
          acc(ptrDeref(optGet2((some(ptrAdd(optGet2(dim3), i)): Option[Pointer]))).ref, 1 *
          write /
          2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.min, 1 * write / 2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.stride, 1 * write / 2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.extent, 1 * write / 2))))
  requires block_length(pointer_block(optGet2(ptrDeref(ptrAdd(optGet2(solBuffer),
    0)).ref.host))) -
    pointer_offset(optGet2(ptrDeref(ptrAdd(optGet2(solBuffer), 0)).ref.host)) ==
    ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(solBuffer), 0)).ref.dim),
    3)).ref.extent *
    ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(solBuffer), 0)).ref.dim),
    3)).ref.stride
  requires (let buf ==
      (solutionMapBuffer) in
      (let p ==
        (1 * write / 2) in
        (let nDims ==
          (1) in
          buf !=
          ((none1(): Option[Nothing]) == (none1(): Option[Nothing]) ?
            (none1(): Option[Pointer]) :
            (some(nothingAs1(optGet1((none1(): Option[Nothing])))): Option[Pointer])) &&
          block_length(pointer_block(optGet2(buf))) -
          pointer_offset(optGet2(buf)) ==
          1 &&
          acc(ptrDeref(optGet2(buf)).ref, p) &&
          acc(ptrDeref(ptrAdd(optGet2(buf), 0)).ref.dim1, p) &&
          ptrDeref(ptrAdd(optGet2(buf), 0)).ref.dim1 !=
          ((none1(): Option[Nothing]) == (none1(): Option[Nothing]) ?
            (none1(): Option[Pointer]) :
            (some(nothingAs1(optGet1((none1(): Option[Nothing])))): Option[Pointer])) &&
          block_length(pointer_block(optGet2(ptrDeref(ptrAdd(optGet2(buf), 0)).ref.dim1))) -
          pointer_offset(optGet2(ptrDeref(ptrAdd(optGet2(buf), 0)).ref.dim1)) ==
          nDims &&
          acc(ptrDeref(ptrAdd(optGet2(buf), 0)).ref.host1, p) &&
          ptrDeref(ptrAdd(optGet2(buf), 0)).ref.host1 !=
          ((none1(): Option[Nothing]) == (none1(): Option[Nothing]) ?
            (none1(): Option[Pointer]) :
            (some(nothingAs1(optGet1((none1(): Option[Nothing])))): Option[Pointer])))))
  requires (let dim3 ==
      (ptrDeref(ptrAdd(optGet2(solutionMapBuffer), 0)).ref.dim1) in
      (let p ==
        (1 * write / 2) in
        (let i ==
          (0) in
          acc(ptrDeref(optGet2((some(ptrAdd(optGet2(dim3), i)): Option[Pointer]))).ref, 1 *
          write /
          2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.min, 1 * write / 2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.stride, 1 * write / 2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.extent, 1 * write / 2))))
  requires block_length(pointer_block(optGet2(ptrDeref(ptrAdd(optGet2(solutionMapBuffer),
    0)).ref.host1))) -
    pointer_offset(optGet2(ptrDeref(ptrAdd(optGet2(solutionMapBuffer), 0)).ref.host1)) ==
    ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(solutionMapBuffer), 0)).ref.dim1),
    0)).ref.extent *
    ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(solutionMapBuffer), 0)).ref.dim1),
    0)).ref.stride
  requires (let buf ==
      (ant1Buffer) in
      (let p ==
        (1 * write / 2) in
        (let nDims ==
          (1) in
          buf !=
          ((none1(): Option[Nothing]) == (none1(): Option[Nothing]) ?
            (none1(): Option[Pointer]) :
            (some(nothingAs1(optGet1((none1(): Option[Nothing])))): Option[Pointer])) &&
          block_length(pointer_block(optGet2(buf))) -
          pointer_offset(optGet2(buf)) ==
          1 &&
          acc(ptrDeref(optGet2(buf)).ref, p) &&
          acc(ptrDeref(ptrAdd(optGet2(buf), 0)).ref.dim1, p) &&
          ptrDeref(ptrAdd(optGet2(buf), 0)).ref.dim1 !=
          ((none1(): Option[Nothing]) == (none1(): Option[Nothing]) ?
            (none1(): Option[Pointer]) :
            (some(nothingAs1(optGet1((none1(): Option[Nothing])))): Option[Pointer])) &&
          block_length(pointer_block(optGet2(ptrDeref(ptrAdd(optGet2(buf), 0)).ref.dim1))) -
          pointer_offset(optGet2(ptrDeref(ptrAdd(optGet2(buf), 0)).ref.dim1)) ==
          nDims &&
          acc(ptrDeref(ptrAdd(optGet2(buf), 0)).ref.host1, p) &&
          ptrDeref(ptrAdd(optGet2(buf), 0)).ref.host1 !=
          ((none1(): Option[Nothing]) == (none1(): Option[Nothing]) ?
            (none1(): Option[Pointer]) :
            (some(nothingAs1(optGet1((none1(): Option[Nothing])))): Option[Pointer])))))
  requires (let dim3 ==
      (ptrDeref(ptrAdd(optGet2(ant1Buffer), 0)).ref.dim1) in
      (let p ==
        (1 * write / 2) in
        (let i ==
          (0) in
          acc(ptrDeref(optGet2((some(ptrAdd(optGet2(dim3), i)): Option[Pointer]))).ref, 1 *
          write /
          2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.min, 1 * write / 2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.stride, 1 * write / 2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.extent, 1 * write / 2))))
  requires block_length(pointer_block(optGet2(ptrDeref(ptrAdd(optGet2(ant1Buffer),
    0)).ref.host1))) -
    pointer_offset(optGet2(ptrDeref(ptrAdd(optGet2(ant1Buffer), 0)).ref.host1)) ==
    ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(ant1Buffer), 0)).ref.dim1),
    0)).ref.extent *
    ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(ant1Buffer), 0)).ref.dim1),
    0)).ref.stride
  requires (let buf ==
      (ant2Buffer) in
      (let p ==
        (1 * write / 2) in
        (let nDims ==
          (1) in
          buf !=
          ((none1(): Option[Nothing]) == (none1(): Option[Nothing]) ?
            (none1(): Option[Pointer]) :
            (some(nothingAs1(optGet1((none1(): Option[Nothing])))): Option[Pointer])) &&
          block_length(pointer_block(optGet2(buf))) -
          pointer_offset(optGet2(buf)) ==
          1 &&
          acc(ptrDeref(optGet2(buf)).ref, p) &&
          acc(ptrDeref(ptrAdd(optGet2(buf), 0)).ref.dim1, p) &&
          ptrDeref(ptrAdd(optGet2(buf), 0)).ref.dim1 !=
          ((none1(): Option[Nothing]) == (none1(): Option[Nothing]) ?
            (none1(): Option[Pointer]) :
            (some(nothingAs1(optGet1((none1(): Option[Nothing])))): Option[Pointer])) &&
          block_length(pointer_block(optGet2(ptrDeref(ptrAdd(optGet2(buf), 0)).ref.dim1))) -
          pointer_offset(optGet2(ptrDeref(ptrAdd(optGet2(buf), 0)).ref.dim1)) ==
          nDims &&
          acc(ptrDeref(ptrAdd(optGet2(buf), 0)).ref.host1, p) &&
          ptrDeref(ptrAdd(optGet2(buf), 0)).ref.host1 !=
          ((none1(): Option[Nothing]) == (none1(): Option[Nothing]) ?
            (none1(): Option[Pointer]) :
            (some(nothingAs1(optGet1((none1(): Option[Nothing])))): Option[Pointer])))))
  requires (let dim3 ==
      (ptrDeref(ptrAdd(optGet2(ant2Buffer), 0)).ref.dim1) in
      (let p ==
        (1 * write / 2) in
        (let i ==
          (0) in
          acc(ptrDeref(optGet2((some(ptrAdd(optGet2(dim3), i)): Option[Pointer]))).ref, 1 *
          write /
          2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.min, 1 * write / 2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.stride, 1 * write / 2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.extent, 1 * write / 2))))
  requires block_length(pointer_block(optGet2(ptrDeref(ptrAdd(optGet2(ant2Buffer),
    0)).ref.host1))) -
    pointer_offset(optGet2(ptrDeref(ptrAdd(optGet2(ant2Buffer), 0)).ref.host1)) ==
    ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(ant2Buffer), 0)).ref.dim1),
    0)).ref.extent *
    ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(ant2Buffer), 0)).ref.dim1),
    0)).ref.stride
  requires (let buf ==
      (modelBuffer) in
      (let p ==
        (1 * write / 2) in
        (let nDims ==
          (4) in
          buf !=
          ((none1(): Option[Nothing]) == (none1(): Option[Nothing]) ?
            (none1(): Option[Pointer]) :
            (some(nothingAs1(optGet1((none1(): Option[Nothing])))): Option[Pointer])) &&
          block_length(pointer_block(optGet2(buf))) -
          pointer_offset(optGet2(buf)) ==
          1 &&
          acc(ptrDeref(optGet2(buf)).ref, p) &&
          acc(ptrDeref(ptrAdd(optGet2(buf), 0)).ref.dim2, p) &&
          ptrDeref(ptrAdd(optGet2(buf), 0)).ref.dim2 !=
          ((none1(): Option[Nothing]) == (none1(): Option[Nothing]) ?
            (none1(): Option[Pointer]) :
            (some(nothingAs1(optGet1((none1(): Option[Nothing])))): Option[Pointer])) &&
          block_length(pointer_block(optGet2(ptrDeref(ptrAdd(optGet2(buf), 0)).ref.dim2))) -
          pointer_offset(optGet2(ptrDeref(ptrAdd(optGet2(buf), 0)).ref.dim2)) ==
          nDims &&
          acc(ptrDeref(ptrAdd(optGet2(buf), 0)).ref.host2, p) &&
          ptrDeref(ptrAdd(optGet2(buf), 0)).ref.host2 !=
          ((none1(): Option[Nothing]) == (none1(): Option[Nothing]) ?
            (none1(): Option[Pointer]) :
            (some(nothingAs1(optGet1((none1(): Option[Nothing])))): Option[Pointer])))))
  requires (let dim3 ==
      (ptrDeref(ptrAdd(optGet2(modelBuffer), 0)).ref.dim2) in
      (let p ==
        (1 * write / 2) in
        (let i ==
          (0) in
          acc(ptrDeref(optGet2((some(ptrAdd(optGet2(dim3), i)): Option[Pointer]))).ref, 1 *
          write /
          2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.min, 1 * write / 2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.stride, 1 * write / 2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.extent, 1 * write / 2))))
  requires (let dim3 ==
      (ptrDeref(ptrAdd(optGet2(modelBuffer), 0)).ref.dim2) in
      (let p ==
        (1 * write / 2) in
        (let i ==
          (1) in
          acc(ptrDeref(optGet2((some(ptrAdd(optGet2(dim3), i)): Option[Pointer]))).ref, 1 *
          write /
          2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.min, 1 * write / 2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.stride, 1 * write / 2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.extent, 1 * write / 2))))
  requires (let dim3 ==
      (ptrDeref(ptrAdd(optGet2(modelBuffer), 0)).ref.dim2) in
      (let p ==
        (1 * write / 2) in
        (let i ==
          (2) in
          acc(ptrDeref(optGet2((some(ptrAdd(optGet2(dim3), i)): Option[Pointer]))).ref, 1 *
          write /
          2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.min, 1 * write / 2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.stride, 1 * write / 2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.extent, 1 * write / 2))))
  requires (let dim3 ==
      (ptrDeref(ptrAdd(optGet2(modelBuffer), 0)).ref.dim2) in
      (let p ==
        (1 * write / 2) in
        (let i ==
          (3) in
          acc(ptrDeref(optGet2((some(ptrAdd(optGet2(dim3), i)): Option[Pointer]))).ref, 1 *
          write /
          2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.min, 1 * write / 2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.stride, 1 * write / 2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.extent, 1 * write / 2))))
  requires block_length(pointer_block(optGet2(ptrDeref(ptrAdd(optGet2(modelBuffer),
    0)).ref.host2))) -
    pointer_offset(optGet2(ptrDeref(ptrAdd(optGet2(modelBuffer), 0)).ref.host2)) ==
    ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(modelBuffer), 0)).ref.dim2),
    3)).ref.extent *
    ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(modelBuffer), 0)).ref.dim2),
    3)).ref.stride
  requires (let buf ==
      (vResInBuffer) in
      (let p ==
        (1 * write / 2) in
        (let nDims ==
          (4) in
          buf !=
          ((none1(): Option[Nothing]) == (none1(): Option[Nothing]) ?
            (none1(): Option[Pointer]) :
            (some(nothingAs1(optGet1((none1(): Option[Nothing])))): Option[Pointer])) &&
          block_length(pointer_block(optGet2(buf))) -
          pointer_offset(optGet2(buf)) ==
          1 &&
          acc(ptrDeref(optGet2(buf)).ref, p) &&
          acc(ptrDeref(ptrAdd(optGet2(buf), 0)).ref.dim2, p) &&
          ptrDeref(ptrAdd(optGet2(buf), 0)).ref.dim2 !=
          ((none1(): Option[Nothing]) == (none1(): Option[Nothing]) ?
            (none1(): Option[Pointer]) :
            (some(nothingAs1(optGet1((none1(): Option[Nothing])))): Option[Pointer])) &&
          block_length(pointer_block(optGet2(ptrDeref(ptrAdd(optGet2(buf), 0)).ref.dim2))) -
          pointer_offset(optGet2(ptrDeref(ptrAdd(optGet2(buf), 0)).ref.dim2)) ==
          nDims &&
          acc(ptrDeref(ptrAdd(optGet2(buf), 0)).ref.host2, p) &&
          ptrDeref(ptrAdd(optGet2(buf), 0)).ref.host2 !=
          ((none1(): Option[Nothing]) == (none1(): Option[Nothing]) ?
            (none1(): Option[Pointer]) :
            (some(nothingAs1(optGet1((none1(): Option[Nothing])))): Option[Pointer])))))
  requires (let dim3 ==
      (ptrDeref(ptrAdd(optGet2(vResInBuffer), 0)).ref.dim2) in
      (let p ==
        (1 * write / 2) in
        (let i ==
          (0) in
          acc(ptrDeref(optGet2((some(ptrAdd(optGet2(dim3), i)): Option[Pointer]))).ref, 1 *
          write /
          2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.min, 1 * write / 2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.stride, 1 * write / 2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.extent, 1 * write / 2))))
  requires (let dim3 ==
      (ptrDeref(ptrAdd(optGet2(vResInBuffer), 0)).ref.dim2) in
      (let p ==
        (1 * write / 2) in
        (let i ==
          (1) in
          acc(ptrDeref(optGet2((some(ptrAdd(optGet2(dim3), i)): Option[Pointer]))).ref, 1 *
          write /
          2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.min, 1 * write / 2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.stride, 1 * write / 2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.extent, 1 * write / 2))))
  requires (let dim3 ==
      (ptrDeref(ptrAdd(optGet2(vResInBuffer), 0)).ref.dim2) in
      (let p ==
        (1 * write / 2) in
        (let i ==
          (2) in
          acc(ptrDeref(optGet2((some(ptrAdd(optGet2(dim3), i)): Option[Pointer]))).ref, 1 *
          write /
          2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.min, 1 * write / 2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.stride, 1 * write / 2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.extent, 1 * write / 2))))
  requires (let dim3 ==
      (ptrDeref(ptrAdd(optGet2(vResInBuffer), 0)).ref.dim2) in
      (let p ==
        (1 * write / 2) in
        (let i ==
          (3) in
          acc(ptrDeref(optGet2((some(ptrAdd(optGet2(dim3), i)): Option[Pointer]))).ref, 1 *
          write /
          2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.min, 1 * write / 2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.stride, 1 * write / 2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.extent, 1 * write / 2))))
  requires block_length(pointer_block(optGet2(ptrDeref(ptrAdd(optGet2(vResInBuffer),
    0)).ref.host2))) -
    pointer_offset(optGet2(ptrDeref(ptrAdd(optGet2(vResInBuffer), 0)).ref.host2)) ==
    ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(vResInBuffer), 0)).ref.dim2),
    3)).ref.extent *
    ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(vResInBuffer), 0)).ref.dim2),
    3)).ref.stride
  requires (let buf ==
      (nextSolutionsComplexBuffer) in
      (let p ==
        (1 * write / 2) in
        (let nDims ==
          (4) in
          buf !=
          ((none1(): Option[Nothing]) == (none1(): Option[Nothing]) ?
            (none1(): Option[Pointer]) :
            (some(nothingAs1(optGet1((none1(): Option[Nothing])))): Option[Pointer])) &&
          block_length(pointer_block(optGet2(buf))) -
          pointer_offset(optGet2(buf)) ==
          1 &&
          acc(ptrDeref(optGet2(buf)).ref, p) &&
          acc(ptrDeref(ptrAdd(optGet2(buf), 0)).ref.dim, p) &&
          ptrDeref(ptrAdd(optGet2(buf), 0)).ref.dim !=
          ((none1(): Option[Nothing]) == (none1(): Option[Nothing]) ?
            (none1(): Option[Pointer]) :
            (some(nothingAs1(optGet1((none1(): Option[Nothing])))): Option[Pointer])) &&
          block_length(pointer_block(optGet2(ptrDeref(ptrAdd(optGet2(buf), 0)).ref.dim))) -
          pointer_offset(optGet2(ptrDeref(ptrAdd(optGet2(buf), 0)).ref.dim)) ==
          nDims &&
          acc(ptrDeref(ptrAdd(optGet2(buf), 0)).ref.host, p) &&
          ptrDeref(ptrAdd(optGet2(buf), 0)).ref.host !=
          ((none1(): Option[Nothing]) == (none1(): Option[Nothing]) ?
            (none1(): Option[Pointer]) :
            (some(nothingAs1(optGet1((none1(): Option[Nothing])))): Option[Pointer])))))
  requires (let dim3 ==
      (ptrDeref(ptrAdd(optGet2(nextSolutionsComplexBuffer), 0)).ref.dim) in
      (let p ==
        (1 * write / 2) in
        (let i ==
          (0) in
          acc(ptrDeref(optGet2((some(ptrAdd(optGet2(dim3), i)): Option[Pointer]))).ref, 1 *
          write /
          2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.min, 1 * write / 2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.stride, 1 * write / 2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.extent, 1 * write / 2))))
  requires (let dim3 ==
      (ptrDeref(ptrAdd(optGet2(nextSolutionsComplexBuffer), 0)).ref.dim) in
      (let p ==
        (1 * write / 2) in
        (let i ==
          (1) in
          acc(ptrDeref(optGet2((some(ptrAdd(optGet2(dim3), i)): Option[Pointer]))).ref, 1 *
          write /
          2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.min, 1 * write / 2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.stride, 1 * write / 2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.extent, 1 * write / 2))))
  requires (let dim3 ==
      (ptrDeref(ptrAdd(optGet2(nextSolutionsComplexBuffer), 0)).ref.dim) in
      (let p ==
        (1 * write / 2) in
        (let i ==
          (2) in
          acc(ptrDeref(optGet2((some(ptrAdd(optGet2(dim3), i)): Option[Pointer]))).ref, 1 *
          write /
          2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.min, 1 * write / 2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.stride, 1 * write / 2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.extent, 1 * write / 2))))
  requires (let dim3 ==
      (ptrDeref(ptrAdd(optGet2(nextSolutionsComplexBuffer), 0)).ref.dim) in
      (let p ==
        (1 * write / 2) in
        (let i ==
          (3) in
          acc(ptrDeref(optGet2((some(ptrAdd(optGet2(dim3), i)): Option[Pointer]))).ref, 1 *
          write /
          2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.min, 1 * write / 2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.stride, 1 * write / 2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.extent, 1 * write / 2))))
  requires block_length(pointer_block(optGet2(ptrDeref(ptrAdd(optGet2(nextSolutionsComplexBuffer),
    0)).ref.host))) -
    pointer_offset(optGet2(ptrDeref(ptrAdd(optGet2(nextSolutionsComplexBuffer),
    0)).ref.host)) ==
    ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(nextSolutionsComplexBuffer),
    0)).ref.dim), 3)).ref.extent *
    ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(nextSolutionsComplexBuffer),
    0)).ref.dim), 3)).ref.stride
  requires ptrDeref(ptrAdd(optGet2(ant1Buffer), 0)).ref.host1 !=
    ptrDeref(ptrAdd(optGet2(solutionMapBuffer), 0)).ref.host1
  requires ptrDeref(ptrAdd(optGet2(ant2Buffer), 0)).ref.host1 !=
    ptrDeref(ptrAdd(optGet2(solutionMapBuffer), 0)).ref.host1
  requires ptrDeref(ptrAdd(optGet2(ant2Buffer), 0)).ref.host1 !=
    ptrDeref(ptrAdd(optGet2(ant1Buffer), 0)).ref.host1
  requires ptrDeref(ptrAdd(optGet2(modelBuffer), 0)).ref.host2 !=
    ptrDeref(ptrAdd(optGet2(solBuffer), 0)).ref.host
  requires ptrDeref(ptrAdd(optGet2(vResInBuffer), 0)).ref.host2 !=
    ptrDeref(ptrAdd(optGet2(solBuffer), 0)).ref.host
  requires ptrDeref(ptrAdd(optGet2(vResInBuffer), 0)).ref.host2 !=
    ptrDeref(ptrAdd(optGet2(modelBuffer), 0)).ref.host2
  requires ptrDeref(ptrAdd(optGet2(nextSolutionsComplexBuffer), 0)).ref.host !=
    ptrDeref(ptrAdd(optGet2(solBuffer), 0)).ref.host
  requires ptrDeref(ptrAdd(optGet2(nextSolutionsComplexBuffer), 0)).ref.host !=
    ptrDeref(ptrAdd(optGet2(modelBuffer), 0)).ref.host2
  requires ptrDeref(ptrAdd(optGet2(nextSolutionsComplexBuffer), 0)).ref.host !=
    ptrDeref(ptrAdd(optGet2(vResInBuffer), 0)).ref.host2
  requires ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(ant1Buffer), 0)).ref.dim1),
    0)).ref.min ==
    0
  requires ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(ant1Buffer), 0)).ref.dim1),
    0)).ref.extent ==
    230930
  requires ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(ant1Buffer), 0)).ref.dim1),
    0)).ref.stride ==
    1
  requires ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(ant2Buffer), 0)).ref.dim1),
    0)).ref.min ==
    0
  requires ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(ant2Buffer), 0)).ref.dim1),
    0)).ref.extent ==
    230930
  requires ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(ant2Buffer), 0)).ref.dim1),
    0)).ref.stride ==
    1
  requires ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(modelBuffer), 0)).ref.dim2),
    0)).ref.min ==
    0
  requires ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(modelBuffer), 0)).ref.dim2),
    0)).ref.extent ==
    2
  requires ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(modelBuffer), 0)).ref.dim2),
    0)).ref.stride ==
    1
  requires ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(modelBuffer), 0)).ref.dim2),
    1)).ref.min ==
    0
  requires ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(modelBuffer), 0)).ref.dim2),
    1)).ref.extent ==
    2
  requires ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(modelBuffer), 0)).ref.dim2),
    1)).ref.stride ==
    2
  requires ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(modelBuffer), 0)).ref.dim2),
    2)).ref.min ==
    0
  requires ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(modelBuffer), 0)).ref.dim2),
    2)).ref.extent ==
    2
  requires ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(modelBuffer), 0)).ref.dim2),
    2)).ref.stride ==
    4
  requires ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(modelBuffer), 0)).ref.dim2),
    3)).ref.min ==
    0
  requires ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(modelBuffer), 0)).ref.dim2),
    3)).ref.extent ==
    230930
  requires ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(modelBuffer), 0)).ref.dim2),
    3)).ref.stride ==
    8
  requires ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(solBuffer), 0)).ref.dim),
    0)).ref.min ==
    0
  requires ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(solBuffer), 0)).ref.dim),
    0)).ref.extent ==
    2
  requires ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(solBuffer), 0)).ref.dim),
    0)).ref.stride ==
    1
  requires ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(solBuffer), 0)).ref.dim),
    1)).ref.min ==
    0
  requires ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(solBuffer), 0)).ref.dim),
    1)).ref.extent ==
    2
  requires ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(solBuffer), 0)).ref.dim),
    1)).ref.stride ==
    2
  requires ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(solBuffer), 0)).ref.dim),
    2)).ref.min ==
    0
  requires ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(solBuffer), 0)).ref.dim),
    2)).ref.extent ==
    8
  requires ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(solBuffer), 0)).ref.dim),
    2)).ref.stride ==
    4
  requires ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(solBuffer), 0)).ref.dim),
    3)).ref.min ==
    0
  requires ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(solBuffer), 0)).ref.dim),
    3)).ref.extent ==
    50
  requires ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(solBuffer), 0)).ref.dim),
    3)).ref.stride ==
    32
  requires ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(solutionMapBuffer),
    0)).ref.dim1), 0)).ref.min ==
    0
  requires ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(solutionMapBuffer),
    0)).ref.dim1), 0)).ref.extent ==
    230930
  requires ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(solutionMapBuffer),
    0)).ref.dim1), 0)).ref.stride ==
    1
  requires ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(vResInBuffer), 0)).ref.dim2),
    0)).ref.min ==
    0
  requires ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(vResInBuffer), 0)).ref.dim2),
    0)).ref.extent ==
    2
  requires ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(vResInBuffer), 0)).ref.dim2),
    0)).ref.stride ==
    1
  requires ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(vResInBuffer), 0)).ref.dim2),
    1)).ref.min ==
    0
  requires ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(vResInBuffer), 0)).ref.dim2),
    1)).ref.extent ==
    2
  requires ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(vResInBuffer), 0)).ref.dim2),
    1)).ref.stride ==
    2
  requires ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(vResInBuffer), 0)).ref.dim2),
    2)).ref.min ==
    0
  requires ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(vResInBuffer), 0)).ref.dim2),
    2)).ref.extent ==
    2
  requires ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(vResInBuffer), 0)).ref.dim2),
    2)).ref.stride ==
    4
  requires ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(vResInBuffer), 0)).ref.dim2),
    3)).ref.min ==
    0
  requires ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(vResInBuffer), 0)).ref.dim2),
    3)).ref.extent ==
    230930
  requires ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(vResInBuffer), 0)).ref.dim2),
    3)).ref.stride ==
    8
  requires ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(nextSolutionsComplexBuffer),
    0)).ref.dim), 0)).ref.min ==
    0
  requires ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(nextSolutionsComplexBuffer),
    0)).ref.dim), 0)).ref.extent ==
    2
  requires ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(nextSolutionsComplexBuffer),
    0)).ref.dim), 0)).ref.stride ==
    1
  requires ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(nextSolutionsComplexBuffer),
    0)).ref.dim), 1)).ref.min ==
    0
  requires ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(nextSolutionsComplexBuffer),
    0)).ref.dim), 1)).ref.extent ==
    2
  requires ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(nextSolutionsComplexBuffer),
    0)).ref.dim), 1)).ref.stride ==
    2
  requires ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(nextSolutionsComplexBuffer),
    0)).ref.dim), 2)).ref.min ==
    0
  requires ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(nextSolutionsComplexBuffer),
    0)).ref.dim), 2)).ref.extent ==
    3
  requires ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(nextSolutionsComplexBuffer),
    0)).ref.dim), 2)).ref.stride ==
    4
  requires ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(nextSolutionsComplexBuffer),
    0)).ref.dim), 3)).ref.min ==
    0
  requires ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(nextSolutionsComplexBuffer),
    0)).ref.dim), 3)).ref.extent ==
    50
  requires ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(nextSolutionsComplexBuffer),
    0)).ref.dim), 3)).ref.stride ==
    32
  requires acc(intPermBound(ptrDeref(ptrAdd(optGet2(ant1Buffer), 0)).ref.host1,
    0, 50), scale(1 * write / 2) * write)
  requires acc(intPermBound(ptrDeref(ptrAdd(optGet2(ant2Buffer), 0)).ref.host1,
    0, 50), scale(1 * write / 2) * write)
  requires acc(intPermBound(ptrDeref(ptrAdd(optGet2(solutionMapBuffer), 0)).ref.host1,
    0, 3), scale(1 * write / 2) * write)
  requires acc(floatPerm(ptrDeref(ptrAdd(optGet2(modelBuffer), 0)).ref.host2), scale(1 *
    write /
    2) *
    write)
  requires acc(doublePerm(ptrDeref(ptrAdd(optGet2(solBuffer), 0)).ref.host), scale(1 *
    write /
    2) *
    write)
  requires acc(floatPerm(ptrDeref(ptrAdd(optGet2(vResInBuffer), 0)).ref.host2), scale(1 *
    write /
    2) *
    write)
  requires acc(doublePerm(ptrDeref(ptrAdd(optGet2(nextSolutionsComplexBuffer),
    0)).ref.host), write)
  ensures (let buf ==
      (solBuffer) in
      (let p ==
        (1 * write / 2) in
        (let nDims ==
          (4) in
          buf !=
          ((none1(): Option[Nothing]) == (none1(): Option[Nothing]) ?
            (none1(): Option[Pointer]) :
            (some(nothingAs1(optGet1((none1(): Option[Nothing])))): Option[Pointer])) &&
          block_length(pointer_block(optGet2(buf))) -
          pointer_offset(optGet2(buf)) ==
          1 &&
          acc(ptrDeref(optGet2(buf)).ref, p) &&
          acc(ptrDeref(ptrAdd(optGet2(buf), 0)).ref.dim, p) &&
          ptrDeref(ptrAdd(optGet2(buf), 0)).ref.dim !=
          ((none1(): Option[Nothing]) == (none1(): Option[Nothing]) ?
            (none1(): Option[Pointer]) :
            (some(nothingAs1(optGet1((none1(): Option[Nothing])))): Option[Pointer])) &&
          block_length(pointer_block(optGet2(ptrDeref(ptrAdd(optGet2(buf), 0)).ref.dim))) -
          pointer_offset(optGet2(ptrDeref(ptrAdd(optGet2(buf), 0)).ref.dim)) ==
          nDims &&
          acc(ptrDeref(ptrAdd(optGet2(buf), 0)).ref.host, p) &&
          ptrDeref(ptrAdd(optGet2(buf), 0)).ref.host !=
          ((none1(): Option[Nothing]) == (none1(): Option[Nothing]) ?
            (none1(): Option[Pointer]) :
            (some(nothingAs1(optGet1((none1(): Option[Nothing])))): Option[Pointer])))))
  ensures (let dim3 ==
      (ptrDeref(ptrAdd(optGet2(solBuffer), 0)).ref.dim) in
      (let p ==
        (1 * write / 2) in
        (let i ==
          (0) in
          acc(ptrDeref(optGet2((some(ptrAdd(optGet2(dim3), i)): Option[Pointer]))).ref, 1 *
          write /
          2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.min, 1 * write / 2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.stride, 1 * write / 2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.extent, 1 * write / 2))))
  ensures (let dim3 ==
      (ptrDeref(ptrAdd(optGet2(solBuffer), 0)).ref.dim) in
      (let p ==
        (1 * write / 2) in
        (let i ==
          (1) in
          acc(ptrDeref(optGet2((some(ptrAdd(optGet2(dim3), i)): Option[Pointer]))).ref, 1 *
          write /
          2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.min, 1 * write / 2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.stride, 1 * write / 2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.extent, 1 * write / 2))))
  ensures (let dim3 ==
      (ptrDeref(ptrAdd(optGet2(solBuffer), 0)).ref.dim) in
      (let p ==
        (1 * write / 2) in
        (let i ==
          (2) in
          acc(ptrDeref(optGet2((some(ptrAdd(optGet2(dim3), i)): Option[Pointer]))).ref, 1 *
          write /
          2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.min, 1 * write / 2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.stride, 1 * write / 2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.extent, 1 * write / 2))))
  ensures (let dim3 ==
      (ptrDeref(ptrAdd(optGet2(solBuffer), 0)).ref.dim) in
      (let p ==
        (1 * write / 2) in
        (let i ==
          (3) in
          acc(ptrDeref(optGet2((some(ptrAdd(optGet2(dim3), i)): Option[Pointer]))).ref, 1 *
          write /
          2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.min, 1 * write / 2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.stride, 1 * write / 2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.extent, 1 * write / 2))))
  ensures block_length(pointer_block(optGet2(ptrDeref(ptrAdd(optGet2(solBuffer),
    0)).ref.host))) -
    pointer_offset(optGet2(ptrDeref(ptrAdd(optGet2(solBuffer), 0)).ref.host)) ==
    ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(solBuffer), 0)).ref.dim),
    3)).ref.extent *
    ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(solBuffer), 0)).ref.dim),
    3)).ref.stride
  ensures (let buf ==
      (solutionMapBuffer) in
      (let p ==
        (1 * write / 2) in
        (let nDims ==
          (1) in
          buf !=
          ((none1(): Option[Nothing]) == (none1(): Option[Nothing]) ?
            (none1(): Option[Pointer]) :
            (some(nothingAs1(optGet1((none1(): Option[Nothing])))): Option[Pointer])) &&
          block_length(pointer_block(optGet2(buf))) -
          pointer_offset(optGet2(buf)) ==
          1 &&
          acc(ptrDeref(optGet2(buf)).ref, p) &&
          acc(ptrDeref(ptrAdd(optGet2(buf), 0)).ref.dim1, p) &&
          ptrDeref(ptrAdd(optGet2(buf), 0)).ref.dim1 !=
          ((none1(): Option[Nothing]) == (none1(): Option[Nothing]) ?
            (none1(): Option[Pointer]) :
            (some(nothingAs1(optGet1((none1(): Option[Nothing])))): Option[Pointer])) &&
          block_length(pointer_block(optGet2(ptrDeref(ptrAdd(optGet2(buf), 0)).ref.dim1))) -
          pointer_offset(optGet2(ptrDeref(ptrAdd(optGet2(buf), 0)).ref.dim1)) ==
          nDims &&
          acc(ptrDeref(ptrAdd(optGet2(buf), 0)).ref.host1, p) &&
          ptrDeref(ptrAdd(optGet2(buf), 0)).ref.host1 !=
          ((none1(): Option[Nothing]) == (none1(): Option[Nothing]) ?
            (none1(): Option[Pointer]) :
            (some(nothingAs1(optGet1((none1(): Option[Nothing])))): Option[Pointer])))))
  ensures (let dim3 ==
      (ptrDeref(ptrAdd(optGet2(solutionMapBuffer), 0)).ref.dim1) in
      (let p ==
        (1 * write / 2) in
        (let i ==
          (0) in
          acc(ptrDeref(optGet2((some(ptrAdd(optGet2(dim3), i)): Option[Pointer]))).ref, 1 *
          write /
          2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.min, 1 * write / 2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.stride, 1 * write / 2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.extent, 1 * write / 2))))
  ensures block_length(pointer_block(optGet2(ptrDeref(ptrAdd(optGet2(solutionMapBuffer),
    0)).ref.host1))) -
    pointer_offset(optGet2(ptrDeref(ptrAdd(optGet2(solutionMapBuffer), 0)).ref.host1)) ==
    ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(solutionMapBuffer), 0)).ref.dim1),
    0)).ref.extent *
    ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(solutionMapBuffer), 0)).ref.dim1),
    0)).ref.stride
  ensures (let buf ==
      (ant1Buffer) in
      (let p ==
        (1 * write / 2) in
        (let nDims ==
          (1) in
          buf !=
          ((none1(): Option[Nothing]) == (none1(): Option[Nothing]) ?
            (none1(): Option[Pointer]) :
            (some(nothingAs1(optGet1((none1(): Option[Nothing])))): Option[Pointer])) &&
          block_length(pointer_block(optGet2(buf))) -
          pointer_offset(optGet2(buf)) ==
          1 &&
          acc(ptrDeref(optGet2(buf)).ref, p) &&
          acc(ptrDeref(ptrAdd(optGet2(buf), 0)).ref.dim1, p) &&
          ptrDeref(ptrAdd(optGet2(buf), 0)).ref.dim1 !=
          ((none1(): Option[Nothing]) == (none1(): Option[Nothing]) ?
            (none1(): Option[Pointer]) :
            (some(nothingAs1(optGet1((none1(): Option[Nothing])))): Option[Pointer])) &&
          block_length(pointer_block(optGet2(ptrDeref(ptrAdd(optGet2(buf), 0)).ref.dim1))) -
          pointer_offset(optGet2(ptrDeref(ptrAdd(optGet2(buf), 0)).ref.dim1)) ==
          nDims &&
          acc(ptrDeref(ptrAdd(optGet2(buf), 0)).ref.host1, p) &&
          ptrDeref(ptrAdd(optGet2(buf), 0)).ref.host1 !=
          ((none1(): Option[Nothing]) == (none1(): Option[Nothing]) ?
            (none1(): Option[Pointer]) :
            (some(nothingAs1(optGet1((none1(): Option[Nothing])))): Option[Pointer])))))
  ensures (let dim3 ==
      (ptrDeref(ptrAdd(optGet2(ant1Buffer), 0)).ref.dim1) in
      (let p ==
        (1 * write / 2) in
        (let i ==
          (0) in
          acc(ptrDeref(optGet2((some(ptrAdd(optGet2(dim3), i)): Option[Pointer]))).ref, 1 *
          write /
          2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.min, 1 * write / 2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.stride, 1 * write / 2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.extent, 1 * write / 2))))
  ensures block_length(pointer_block(optGet2(ptrDeref(ptrAdd(optGet2(ant1Buffer),
    0)).ref.host1))) -
    pointer_offset(optGet2(ptrDeref(ptrAdd(optGet2(ant1Buffer), 0)).ref.host1)) ==
    ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(ant1Buffer), 0)).ref.dim1),
    0)).ref.extent *
    ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(ant1Buffer), 0)).ref.dim1),
    0)).ref.stride
  ensures (let buf ==
      (ant2Buffer) in
      (let p ==
        (1 * write / 2) in
        (let nDims ==
          (1) in
          buf !=
          ((none1(): Option[Nothing]) == (none1(): Option[Nothing]) ?
            (none1(): Option[Pointer]) :
            (some(nothingAs1(optGet1((none1(): Option[Nothing])))): Option[Pointer])) &&
          block_length(pointer_block(optGet2(buf))) -
          pointer_offset(optGet2(buf)) ==
          1 &&
          acc(ptrDeref(optGet2(buf)).ref, p) &&
          acc(ptrDeref(ptrAdd(optGet2(buf), 0)).ref.dim1, p) &&
          ptrDeref(ptrAdd(optGet2(buf), 0)).ref.dim1 !=
          ((none1(): Option[Nothing]) == (none1(): Option[Nothing]) ?
            (none1(): Option[Pointer]) :
            (some(nothingAs1(optGet1((none1(): Option[Nothing])))): Option[Pointer])) &&
          block_length(pointer_block(optGet2(ptrDeref(ptrAdd(optGet2(buf), 0)).ref.dim1))) -
          pointer_offset(optGet2(ptrDeref(ptrAdd(optGet2(buf), 0)).ref.dim1)) ==
          nDims &&
          acc(ptrDeref(ptrAdd(optGet2(buf), 0)).ref.host1, p) &&
          ptrDeref(ptrAdd(optGet2(buf), 0)).ref.host1 !=
          ((none1(): Option[Nothing]) == (none1(): Option[Nothing]) ?
            (none1(): Option[Pointer]) :
            (some(nothingAs1(optGet1((none1(): Option[Nothing])))): Option[Pointer])))))
  ensures (let dim3 ==
      (ptrDeref(ptrAdd(optGet2(ant2Buffer), 0)).ref.dim1) in
      (let p ==
        (1 * write / 2) in
        (let i ==
          (0) in
          acc(ptrDeref(optGet2((some(ptrAdd(optGet2(dim3), i)): Option[Pointer]))).ref, 1 *
          write /
          2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.min, 1 * write / 2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.stride, 1 * write / 2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.extent, 1 * write / 2))))
  ensures block_length(pointer_block(optGet2(ptrDeref(ptrAdd(optGet2(ant2Buffer),
    0)).ref.host1))) -
    pointer_offset(optGet2(ptrDeref(ptrAdd(optGet2(ant2Buffer), 0)).ref.host1)) ==
    ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(ant2Buffer), 0)).ref.dim1),
    0)).ref.extent *
    ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(ant2Buffer), 0)).ref.dim1),
    0)).ref.stride
  ensures (let buf ==
      (modelBuffer) in
      (let p ==
        (1 * write / 2) in
        (let nDims ==
          (4) in
          buf !=
          ((none1(): Option[Nothing]) == (none1(): Option[Nothing]) ?
            (none1(): Option[Pointer]) :
            (some(nothingAs1(optGet1((none1(): Option[Nothing])))): Option[Pointer])) &&
          block_length(pointer_block(optGet2(buf))) -
          pointer_offset(optGet2(buf)) ==
          1 &&
          acc(ptrDeref(optGet2(buf)).ref, p) &&
          acc(ptrDeref(ptrAdd(optGet2(buf), 0)).ref.dim2, p) &&
          ptrDeref(ptrAdd(optGet2(buf), 0)).ref.dim2 !=
          ((none1(): Option[Nothing]) == (none1(): Option[Nothing]) ?
            (none1(): Option[Pointer]) :
            (some(nothingAs1(optGet1((none1(): Option[Nothing])))): Option[Pointer])) &&
          block_length(pointer_block(optGet2(ptrDeref(ptrAdd(optGet2(buf), 0)).ref.dim2))) -
          pointer_offset(optGet2(ptrDeref(ptrAdd(optGet2(buf), 0)).ref.dim2)) ==
          nDims &&
          acc(ptrDeref(ptrAdd(optGet2(buf), 0)).ref.host2, p) &&
          ptrDeref(ptrAdd(optGet2(buf), 0)).ref.host2 !=
          ((none1(): Option[Nothing]) == (none1(): Option[Nothing]) ?
            (none1(): Option[Pointer]) :
            (some(nothingAs1(optGet1((none1(): Option[Nothing])))): Option[Pointer])))))
  ensures (let dim3 ==
      (ptrDeref(ptrAdd(optGet2(modelBuffer), 0)).ref.dim2) in
      (let p ==
        (1 * write / 2) in
        (let i ==
          (0) in
          acc(ptrDeref(optGet2((some(ptrAdd(optGet2(dim3), i)): Option[Pointer]))).ref, 1 *
          write /
          2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.min, 1 * write / 2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.stride, 1 * write / 2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.extent, 1 * write / 2))))
  ensures (let dim3 ==
      (ptrDeref(ptrAdd(optGet2(modelBuffer), 0)).ref.dim2) in
      (let p ==
        (1 * write / 2) in
        (let i ==
          (1) in
          acc(ptrDeref(optGet2((some(ptrAdd(optGet2(dim3), i)): Option[Pointer]))).ref, 1 *
          write /
          2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.min, 1 * write / 2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.stride, 1 * write / 2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.extent, 1 * write / 2))))
  ensures (let dim3 ==
      (ptrDeref(ptrAdd(optGet2(modelBuffer), 0)).ref.dim2) in
      (let p ==
        (1 * write / 2) in
        (let i ==
          (2) in
          acc(ptrDeref(optGet2((some(ptrAdd(optGet2(dim3), i)): Option[Pointer]))).ref, 1 *
          write /
          2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.min, 1 * write / 2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.stride, 1 * write / 2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.extent, 1 * write / 2))))
  ensures (let dim3 ==
      (ptrDeref(ptrAdd(optGet2(modelBuffer), 0)).ref.dim2) in
      (let p ==
        (1 * write / 2) in
        (let i ==
          (3) in
          acc(ptrDeref(optGet2((some(ptrAdd(optGet2(dim3), i)): Option[Pointer]))).ref, 1 *
          write /
          2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.min, 1 * write / 2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.stride, 1 * write / 2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.extent, 1 * write / 2))))
  ensures block_length(pointer_block(optGet2(ptrDeref(ptrAdd(optGet2(modelBuffer),
    0)).ref.host2))) -
    pointer_offset(optGet2(ptrDeref(ptrAdd(optGet2(modelBuffer), 0)).ref.host2)) ==
    ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(modelBuffer), 0)).ref.dim2),
    3)).ref.extent *
    ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(modelBuffer), 0)).ref.dim2),
    3)).ref.stride
  ensures (let buf ==
      (vResInBuffer) in
      (let p ==
        (1 * write / 2) in
        (let nDims ==
          (4) in
          buf !=
          ((none1(): Option[Nothing]) == (none1(): Option[Nothing]) ?
            (none1(): Option[Pointer]) :
            (some(nothingAs1(optGet1((none1(): Option[Nothing])))): Option[Pointer])) &&
          block_length(pointer_block(optGet2(buf))) -
          pointer_offset(optGet2(buf)) ==
          1 &&
          acc(ptrDeref(optGet2(buf)).ref, p) &&
          acc(ptrDeref(ptrAdd(optGet2(buf), 0)).ref.dim2, p) &&
          ptrDeref(ptrAdd(optGet2(buf), 0)).ref.dim2 !=
          ((none1(): Option[Nothing]) == (none1(): Option[Nothing]) ?
            (none1(): Option[Pointer]) :
            (some(nothingAs1(optGet1((none1(): Option[Nothing])))): Option[Pointer])) &&
          block_length(pointer_block(optGet2(ptrDeref(ptrAdd(optGet2(buf), 0)).ref.dim2))) -
          pointer_offset(optGet2(ptrDeref(ptrAdd(optGet2(buf), 0)).ref.dim2)) ==
          nDims &&
          acc(ptrDeref(ptrAdd(optGet2(buf), 0)).ref.host2, p) &&
          ptrDeref(ptrAdd(optGet2(buf), 0)).ref.host2 !=
          ((none1(): Option[Nothing]) == (none1(): Option[Nothing]) ?
            (none1(): Option[Pointer]) :
            (some(nothingAs1(optGet1((none1(): Option[Nothing])))): Option[Pointer])))))
  ensures (let dim3 ==
      (ptrDeref(ptrAdd(optGet2(vResInBuffer), 0)).ref.dim2) in
      (let p ==
        (1 * write / 2) in
        (let i ==
          (0) in
          acc(ptrDeref(optGet2((some(ptrAdd(optGet2(dim3), i)): Option[Pointer]))).ref, 1 *
          write /
          2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.min, 1 * write / 2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.stride, 1 * write / 2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.extent, 1 * write / 2))))
  ensures (let dim3 ==
      (ptrDeref(ptrAdd(optGet2(vResInBuffer), 0)).ref.dim2) in
      (let p ==
        (1 * write / 2) in
        (let i ==
          (1) in
          acc(ptrDeref(optGet2((some(ptrAdd(optGet2(dim3), i)): Option[Pointer]))).ref, 1 *
          write /
          2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.min, 1 * write / 2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.stride, 1 * write / 2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.extent, 1 * write / 2))))
  ensures (let dim3 ==
      (ptrDeref(ptrAdd(optGet2(vResInBuffer), 0)).ref.dim2) in
      (let p ==
        (1 * write / 2) in
        (let i ==
          (2) in
          acc(ptrDeref(optGet2((some(ptrAdd(optGet2(dim3), i)): Option[Pointer]))).ref, 1 *
          write /
          2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.min, 1 * write / 2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.stride, 1 * write / 2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.extent, 1 * write / 2))))
  ensures (let dim3 ==
      (ptrDeref(ptrAdd(optGet2(vResInBuffer), 0)).ref.dim2) in
      (let p ==
        (1 * write / 2) in
        (let i ==
          (3) in
          acc(ptrDeref(optGet2((some(ptrAdd(optGet2(dim3), i)): Option[Pointer]))).ref, 1 *
          write /
          2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.min, 1 * write / 2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.stride, 1 * write / 2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.extent, 1 * write / 2))))
  ensures block_length(pointer_block(optGet2(ptrDeref(ptrAdd(optGet2(vResInBuffer),
    0)).ref.host2))) -
    pointer_offset(optGet2(ptrDeref(ptrAdd(optGet2(vResInBuffer), 0)).ref.host2)) ==
    ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(vResInBuffer), 0)).ref.dim2),
    3)).ref.extent *
    ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(vResInBuffer), 0)).ref.dim2),
    3)).ref.stride
  ensures (let buf ==
      (nextSolutionsComplexBuffer) in
      (let p ==
        (1 * write / 2) in
        (let nDims ==
          (4) in
          buf !=
          ((none1(): Option[Nothing]) == (none1(): Option[Nothing]) ?
            (none1(): Option[Pointer]) :
            (some(nothingAs1(optGet1((none1(): Option[Nothing])))): Option[Pointer])) &&
          block_length(pointer_block(optGet2(buf))) -
          pointer_offset(optGet2(buf)) ==
          1 &&
          acc(ptrDeref(optGet2(buf)).ref, p) &&
          acc(ptrDeref(ptrAdd(optGet2(buf), 0)).ref.dim, p) &&
          ptrDeref(ptrAdd(optGet2(buf), 0)).ref.dim !=
          ((none1(): Option[Nothing]) == (none1(): Option[Nothing]) ?
            (none1(): Option[Pointer]) :
            (some(nothingAs1(optGet1((none1(): Option[Nothing])))): Option[Pointer])) &&
          block_length(pointer_block(optGet2(ptrDeref(ptrAdd(optGet2(buf), 0)).ref.dim))) -
          pointer_offset(optGet2(ptrDeref(ptrAdd(optGet2(buf), 0)).ref.dim)) ==
          nDims &&
          acc(ptrDeref(ptrAdd(optGet2(buf), 0)).ref.host, p) &&
          ptrDeref(ptrAdd(optGet2(buf), 0)).ref.host !=
          ((none1(): Option[Nothing]) == (none1(): Option[Nothing]) ?
            (none1(): Option[Pointer]) :
            (some(nothingAs1(optGet1((none1(): Option[Nothing])))): Option[Pointer])))))
  ensures (let dim3 ==
      (ptrDeref(ptrAdd(optGet2(nextSolutionsComplexBuffer), 0)).ref.dim) in
      (let p ==
        (1 * write / 2) in
        (let i ==
          (0) in
          acc(ptrDeref(optGet2((some(ptrAdd(optGet2(dim3), i)): Option[Pointer]))).ref, 1 *
          write /
          2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.min, 1 * write / 2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.stride, 1 * write / 2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.extent, 1 * write / 2))))
  ensures (let dim3 ==
      (ptrDeref(ptrAdd(optGet2(nextSolutionsComplexBuffer), 0)).ref.dim) in
      (let p ==
        (1 * write / 2) in
        (let i ==
          (1) in
          acc(ptrDeref(optGet2((some(ptrAdd(optGet2(dim3), i)): Option[Pointer]))).ref, 1 *
          write /
          2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.min, 1 * write / 2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.stride, 1 * write / 2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.extent, 1 * write / 2))))
  ensures (let dim3 ==
      (ptrDeref(ptrAdd(optGet2(nextSolutionsComplexBuffer), 0)).ref.dim) in
      (let p ==
        (1 * write / 2) in
        (let i ==
          (2) in
          acc(ptrDeref(optGet2((some(ptrAdd(optGet2(dim3), i)): Option[Pointer]))).ref, 1 *
          write /
          2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.min, 1 * write / 2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.stride, 1 * write / 2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.extent, 1 * write / 2))))
  ensures (let dim3 ==
      (ptrDeref(ptrAdd(optGet2(nextSolutionsComplexBuffer), 0)).ref.dim) in
      (let p ==
        (1 * write / 2) in
        (let i ==
          (3) in
          acc(ptrDeref(optGet2((some(ptrAdd(optGet2(dim3), i)): Option[Pointer]))).ref, 1 *
          write /
          2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.min, 1 * write / 2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.stride, 1 * write / 2) &&
          acc(ptrDeref(ptrAdd(optGet2(dim3), i)).ref.extent, 1 * write / 2))))
  ensures block_length(pointer_block(optGet2(ptrDeref(ptrAdd(optGet2(nextSolutionsComplexBuffer),
    0)).ref.host))) -
    pointer_offset(optGet2(ptrDeref(ptrAdd(optGet2(nextSolutionsComplexBuffer),
    0)).ref.host)) ==
    ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(nextSolutionsComplexBuffer),
    0)).ref.dim), 3)).ref.extent *
    ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(nextSolutionsComplexBuffer),
    0)).ref.dim), 3)).ref.stride
  ensures ptrDeref(ptrAdd(optGet2(ant1Buffer), 0)).ref.host1 !=
    ptrDeref(ptrAdd(optGet2(solutionMapBuffer), 0)).ref.host1
  ensures ptrDeref(ptrAdd(optGet2(ant2Buffer), 0)).ref.host1 !=
    ptrDeref(ptrAdd(optGet2(solutionMapBuffer), 0)).ref.host1
  ensures ptrDeref(ptrAdd(optGet2(ant2Buffer), 0)).ref.host1 !=
    ptrDeref(ptrAdd(optGet2(ant1Buffer), 0)).ref.host1
  ensures ptrDeref(ptrAdd(optGet2(modelBuffer), 0)).ref.host2 !=
    ptrDeref(ptrAdd(optGet2(solBuffer), 0)).ref.host
  ensures ptrDeref(ptrAdd(optGet2(vResInBuffer), 0)).ref.host2 !=
    ptrDeref(ptrAdd(optGet2(solBuffer), 0)).ref.host
  ensures ptrDeref(ptrAdd(optGet2(vResInBuffer), 0)).ref.host2 !=
    ptrDeref(ptrAdd(optGet2(modelBuffer), 0)).ref.host2
  ensures ptrDeref(ptrAdd(optGet2(nextSolutionsComplexBuffer), 0)).ref.host !=
    ptrDeref(ptrAdd(optGet2(solBuffer), 0)).ref.host
  ensures ptrDeref(ptrAdd(optGet2(nextSolutionsComplexBuffer), 0)).ref.host !=
    ptrDeref(ptrAdd(optGet2(modelBuffer), 0)).ref.host2
  ensures ptrDeref(ptrAdd(optGet2(nextSolutionsComplexBuffer), 0)).ref.host !=
    ptrDeref(ptrAdd(optGet2(vResInBuffer), 0)).ref.host2
  ensures ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(ant1Buffer), 0)).ref.dim1),
    0)).ref.min ==
    0
  ensures ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(ant1Buffer), 0)).ref.dim1),
    0)).ref.extent ==
    230930
  ensures ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(ant1Buffer), 0)).ref.dim1),
    0)).ref.stride ==
    1
  ensures ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(ant2Buffer), 0)).ref.dim1),
    0)).ref.min ==
    0
  ensures ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(ant2Buffer), 0)).ref.dim1),
    0)).ref.extent ==
    230930
  ensures ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(ant2Buffer), 0)).ref.dim1),
    0)).ref.stride ==
    1
  ensures ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(modelBuffer), 0)).ref.dim2),
    0)).ref.min ==
    0
  ensures ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(modelBuffer), 0)).ref.dim2),
    0)).ref.extent ==
    2
  ensures ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(modelBuffer), 0)).ref.dim2),
    0)).ref.stride ==
    1
  ensures ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(modelBuffer), 0)).ref.dim2),
    1)).ref.min ==
    0
  ensures ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(modelBuffer), 0)).ref.dim2),
    1)).ref.extent ==
    2
  ensures ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(modelBuffer), 0)).ref.dim2),
    1)).ref.stride ==
    2
  ensures ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(modelBuffer), 0)).ref.dim2),
    2)).ref.min ==
    0
  ensures ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(modelBuffer), 0)).ref.dim2),
    2)).ref.extent ==
    2
  ensures ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(modelBuffer), 0)).ref.dim2),
    2)).ref.stride ==
    4
  ensures ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(modelBuffer), 0)).ref.dim2),
    3)).ref.min ==
    0
  ensures ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(modelBuffer), 0)).ref.dim2),
    3)).ref.extent ==
    230930
  ensures ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(modelBuffer), 0)).ref.dim2),
    3)).ref.stride ==
    8
  ensures ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(solBuffer), 0)).ref.dim),
    0)).ref.min ==
    0
  ensures ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(solBuffer), 0)).ref.dim),
    0)).ref.extent ==
    2
  ensures ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(solBuffer), 0)).ref.dim),
    0)).ref.stride ==
    1
  ensures ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(solBuffer), 0)).ref.dim),
    1)).ref.min ==
    0
  ensures ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(solBuffer), 0)).ref.dim),
    1)).ref.extent ==
    2
  ensures ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(solBuffer), 0)).ref.dim),
    1)).ref.stride ==
    2
  ensures ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(solBuffer), 0)).ref.dim),
    2)).ref.min ==
    0
  ensures ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(solBuffer), 0)).ref.dim),
    2)).ref.extent ==
    8
  ensures ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(solBuffer), 0)).ref.dim),
    2)).ref.stride ==
    4
  ensures ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(solBuffer), 0)).ref.dim),
    3)).ref.min ==
    0
  ensures ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(solBuffer), 0)).ref.dim),
    3)).ref.extent ==
    50
  ensures ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(solBuffer), 0)).ref.dim),
    3)).ref.stride ==
    32
  ensures ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(solutionMapBuffer),
    0)).ref.dim1), 0)).ref.min ==
    0
  ensures ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(solutionMapBuffer),
    0)).ref.dim1), 0)).ref.extent ==
    230930
  ensures ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(solutionMapBuffer),
    0)).ref.dim1), 0)).ref.stride ==
    1
  ensures ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(vResInBuffer), 0)).ref.dim2),
    0)).ref.min ==
    0
  ensures ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(vResInBuffer), 0)).ref.dim2),
    0)).ref.extent ==
    2
  ensures ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(vResInBuffer), 0)).ref.dim2),
    0)).ref.stride ==
    1
  ensures ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(vResInBuffer), 0)).ref.dim2),
    1)).ref.min ==
    0
  ensures ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(vResInBuffer), 0)).ref.dim2),
    1)).ref.extent ==
    2
  ensures ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(vResInBuffer), 0)).ref.dim2),
    1)).ref.stride ==
    2
  ensures ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(vResInBuffer), 0)).ref.dim2),
    2)).ref.min ==
    0
  ensures ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(vResInBuffer), 0)).ref.dim2),
    2)).ref.extent ==
    2
  ensures ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(vResInBuffer), 0)).ref.dim2),
    2)).ref.stride ==
    4
  ensures ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(vResInBuffer), 0)).ref.dim2),
    3)).ref.min ==
    0
  ensures ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(vResInBuffer), 0)).ref.dim2),
    3)).ref.extent ==
    230930
  ensures ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(vResInBuffer), 0)).ref.dim2),
    3)).ref.stride ==
    8
  ensures ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(nextSolutionsComplexBuffer),
    0)).ref.dim), 0)).ref.min ==
    0
  ensures ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(nextSolutionsComplexBuffer),
    0)).ref.dim), 0)).ref.extent ==
    2
  ensures ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(nextSolutionsComplexBuffer),
    0)).ref.dim), 0)).ref.stride ==
    1
  ensures ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(nextSolutionsComplexBuffer),
    0)).ref.dim), 1)).ref.min ==
    0
  ensures ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(nextSolutionsComplexBuffer),
    0)).ref.dim), 1)).ref.extent ==
    2
  ensures ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(nextSolutionsComplexBuffer),
    0)).ref.dim), 1)).ref.stride ==
    2
  ensures ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(nextSolutionsComplexBuffer),
    0)).ref.dim), 2)).ref.min ==
    0
  ensures ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(nextSolutionsComplexBuffer),
    0)).ref.dim), 2)).ref.extent ==
    3
  ensures ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(nextSolutionsComplexBuffer),
    0)).ref.dim), 2)).ref.stride ==
    4
  ensures ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(nextSolutionsComplexBuffer),
    0)).ref.dim), 3)).ref.min ==
    0
  ensures ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(nextSolutionsComplexBuffer),
    0)).ref.dim), 3)).ref.extent ==
    50
  ensures ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(nextSolutionsComplexBuffer),
    0)).ref.dim), 3)).ref.stride ==
    32
  ensures acc(intPermBound(ptrDeref(ptrAdd(optGet2(ant1Buffer), 0)).ref.host1,
    0, 50), scale(1 * write / 2) * write)
  ensures acc(intPermBound(ptrDeref(ptrAdd(optGet2(ant2Buffer), 0)).ref.host1,
    0, 50), scale(1 * write / 2) * write)
  ensures acc(intPermBound(ptrDeref(ptrAdd(optGet2(solutionMapBuffer), 0)).ref.host1,
    0, 3), scale(1 * write / 2) * write)
  ensures acc(floatPerm(ptrDeref(ptrAdd(optGet2(modelBuffer), 0)).ref.host2), scale(1 *
    write /
    2) *
    write)
  ensures acc(doublePerm(ptrDeref(ptrAdd(optGet2(solBuffer), 0)).ref.host), scale(1 *
    write /
    2) *
    write)
  ensures acc(floatPerm(ptrDeref(ptrAdd(optGet2(vResInBuffer), 0)).ref.host2), scale(1 *
    write /
    2) *
    write)
  ensures acc(doublePerm(ptrDeref(ptrAdd(optGet2(nextSolutionsComplexBuffer),
    0)).ref.host), write)
{
  {
    var exc: Ref
    var return: Int
    var ant1: Option[Pointer]
    var ant1Min0: Int
    var ant1Extent0: Int
    var ant1Stride0: Int
    var ant2: Option[Pointer]
    var ant2Min0: Int
    var ant2Extent0: Int
    var ant2Stride0: Int
    var model: Option[Pointer]
    var modelMin0: Int
    var modelExtent0: Int
    var modelStride0: Int
    var modelMin1: Int
    var modelExtent1: Int
    var modelStride1: Int
    var modelMin2: Int
    var modelExtent2: Int
    var modelStride2: Int
    var modelMin3: Int
    var modelExtent3: Int
    var modelStride3: Int
    var nextSolutionsComplex: Option[Pointer]
    var nextSolutionsComplexMin0: Int
    var nextSolutionsComplexExtent0: Int
    var nextSolutionsComplexStride0: Int
    var nextSolutionsComplexMin1: Int
    var nextSolutionsComplexExtent1: Int
    var nextSolutionsComplexStride1: Int
    var nextSolutionsComplexMin2: Int
    var nextSolutionsComplexExtent2: Int
    var nextSolutionsComplexStride2: Int
    var nextSolutionsComplexMin3: Int
    var nextSolutionsComplexExtent3: Int
    var nextSolutionsComplexStride3: Int
    var sol: Option[Pointer]
    var solMin0: Int
    var solExtent0: Int
    var solStride0: Int
    var solMin1: Int
    var solExtent1: Int
    var solStride1: Int
    var solMin2: Int
    var solExtent2: Int
    var solStride2: Int
    var solMin3: Int
    var solExtent3: Int
    var solStride3: Int
    var solutionMap: Option[Pointer]
    var solutionMapMin0: Int
    var solutionMapExtent0: Int
    var solutionMapStride0: Int
    var vResIn: Option[Pointer]
    var vResInMin0: Int
    var vResInExtent0: Int
    var vResInStride0: Int
    var vResInMin1: Int
    var vResInExtent1: Int
    var vResInStride1: Int
    var vResInMin2: Int
    var vResInExtent2: Int
    var vResInStride2: Int
    var vResInMin3: Int
    var vResInExtent3: Int
    var vResInStride3: Int
    var _255: Int
    var corModel20: Option[Pointer]
    var _256: Int
    var corModel21: Option[Pointer]
    var _257: Int
    var corModel22: Option[Pointer]
    var _258: Int
    var corModel23: Option[Pointer]
    var _259: Int
    var corModel24: Option[Pointer]
    var _260: Int
    var corModel25: Option[Pointer]
    var _261: Int
    var corModel26: Option[Pointer]
    var _262: Int
    var corModel27: Option[Pointer]
    var corModel2S0Vis: Int
    var _263: Int
    var _264: Int
    var t12696: Int
    var _265: Perm
    var _266: Perm
    var _267: Perm
    var _268: Perm
    var _269: Perm
    var _270: Perm
    var _271: Perm
    var _272: Perm
    var _273: Perm
    var _274: Perm
    var _275: Perm
    var _276: Perm
    var _277: Perm
    var _278: Perm
    var _279: Perm
    var _280: Perm
    var _281: Perm
    var _282: Perm
    var _283: Perm
    var _284: Perm
    var _285: Perm
    var _286: Perm
    var _287: Perm
    var _288: Perm
    var _289: Perm
    var _290: Perm
    var _291: Perm
    var _292: Perm
    var _293: Perm
    var _294: Perm
    var _295: Perm
    var _296: Perm
    var _297: Perm
    var _298: Perm
    var _299: Perm
    var _300: Perm
    var _301: Perm
    var _302: Perm
    var _303: Perm
    var _304: Perm
    var _305: Perm
    var _306: Perm
    var _307: Perm
    var _308: Perm
    var _309: Perm
    var _310: Perm
    var _311: Perm
    var _312: Perm
    var _313: Int
    var corModelTransp10: Option[Pointer]
    var _314: Int
    var corModelTransp11: Option[Pointer]
    var _315: Int
    var corModelTransp12: Option[Pointer]
    var _316: Int
    var corModelTransp13: Option[Pointer]
    var _317: Int
    var corModelTransp14: Option[Pointer]
    var _318: Int
    var corModelTransp15: Option[Pointer]
    var _319: Int
    var corModelTransp16: Option[Pointer]
    var _320: Int
    var corModelTransp17: Option[Pointer]
    var corModelTransp1S0Vis: Int
    var _321: Int
    var _322: Int
    var t12703: Int
    var _323: Perm
    var _324: Perm
    var _325: Perm
    var _326: Perm
    var _327: Perm
    var _328: Perm
    var _329: Perm
    var _330: Perm
    var _331: Perm
    var _332: Perm
    var _333: Perm
    var _334: Perm
    var _335: Perm
    var _336: Perm
    var _337: Perm
    var _338: Perm
    var _339: Perm
    var _340: Perm
    var _341: Perm
    var _342: Perm
    var _343: Perm
    var _344: Perm
    var _345: Perm
    var _346: Perm
    var _347: Perm
    var _348: Perm
    var _349: Perm
    var _350: Perm
    var _351: Perm
    var _352: Perm
    var _353: Perm
    var _354: Perm
    var _355: Perm
    var _356: Perm
    var _357: Perm
    var _358: Perm
    var _359: Perm
    var _360: Perm
    var _361: Perm
    var _362: Perm
    var _363: Perm
    var _364: Perm
    var _365: Perm
    var _366: Perm
    var _367: Perm
    var _368: Perm
    var _369: Perm
    var _370: Perm
    var denominator1: Option[Pointer]
    var denominator1S0A: Int
    var t12735: Int
    var denominator1S0Si: Int
    var t12736: Int
    var denominator1S0I: Int
    var denominator1S1I: Int
    var denominator1S1Rv2Y: Int
    var denominator1S1Rv2X: Int
    var denominatorInter1: Option[Pointer]
    var _371: Perm
    var t12524: Perm
    var _372: Perm
    var t12525: Perm
    var _373: Perm
    var t12526: Perm
    var _374: Perm
    var t12527: Perm
    var _375: Perm
    var t12528: Perm
    var _376: Perm
    var t12529: Perm
    var _377: Perm
    var t12530: Perm
    var _378: Perm
    var t12531: Perm
    var _379: Perm
    var t12532: Perm
    var _380: Perm
    var t12533: Perm
    var _381: Perm
    var t12534: Perm
    var _382: Perm
    var t12535: Perm
    var _383: Perm
    var t12536: Perm
    var _384: Perm
    var t12537: Perm
    var _385: Perm
    var t12538: Perm
    var _386: Perm
    var t12539: Perm
    var _387: Int
    var _388: Int
    var _389: Int
    var t12540: Int
    var _390: Perm
    var _391: Perm
    var numerator10: Option[Pointer]
    var numerator11: Option[Pointer]
    var numerator12: Option[Pointer]
    var numerator13: Option[Pointer]
    var numerator1S0A: Int
    var t12739: Int
    var numerator1S0Si: Int
    var numerator1S1Rv2Y: Int
    var numerator1S1Rv2X: Int
    var numeratorInter10: Option[Pointer]
    var numeratorInter11: Option[Pointer]
    var numeratorInter12: Option[Pointer]
    var numeratorInter13: Option[Pointer]
    var nextSolutionsComplexS0A: Int
    var t12742: Int
    var t12741: Int
    var nextSolutionsComplexS0Si: Int
    var t12746: Int
    var t12745: Int
    var nextSolutionsComplexS0Pol: Int
    var t12748: Bool
    var t12749: Int
    var nextSolutionsComplexS0C: Int
    var nextSolutionsInter0: Option[Pointer]
    var nextSolutionsInter1: Option[Pointer]
    var buf: Option[Pointer]
    var unknown20: Option[Pointer]
    var buf1: Option[Pointer]
    var d: Int
    var unknown21: Int
    var buf2: Option[Pointer]
    var d1: Int
    var unknown22: Int
    var buf3: Option[Pointer]
    var d2: Int
    var unknown23: Int
    var buf4: Option[Pointer]
    var unknown24: Option[Pointer]
    var buf5: Option[Pointer]
    var d3: Int
    var unknown25: Int
    var buf6: Option[Pointer]
    var d4: Int
    var unknown26: Int
    var buf7: Option[Pointer]
    var d5: Int
    var unknown27: Int
    var buf8: Option[Pointer]
    var unknown28: Option[Pointer]
    var buf9: Option[Pointer]
    var d6: Int
    var unknown29: Int
    var buf10: Option[Pointer]
    var d7: Int
    var unknown30: Int
    var buf11: Option[Pointer]
    var d8: Int
    var unknown31: Int
    var buf12: Option[Pointer]
    var d9: Int
    var unknown32: Int
    var buf13: Option[Pointer]
    var d10: Int
    var unknown33: Int
    var buf14: Option[Pointer]
    var d11: Int
    var unknown34: Int
    var buf15: Option[Pointer]
    var d12: Int
    var unknown35: Int
    var buf16: Option[Pointer]
    var d13: Int
    var unknown36: Int
    var buf17: Option[Pointer]
    var d14: Int
    var unknown37: Int
    var buf18: Option[Pointer]
    var d15: Int
    var unknown38: Int
    var buf19: Option[Pointer]
    var d16: Int
    var unknown39: Int
    var buf20: Option[Pointer]
    var d17: Int
    var unknown40: Int
    var buf21: Option[Pointer]
    var unknown41: Option[Pointer]
    var buf22: Option[Pointer]
    var d18: Int
    var unknown42: Int
    var buf23: Option[Pointer]
    var d19: Int
    var unknown43: Int
    var buf24: Option[Pointer]
    var d20: Int
    var unknown44: Int
    var buf25: Option[Pointer]
    var d21: Int
    var unknown45: Int
    var buf26: Option[Pointer]
    var d22: Int
    var unknown46: Int
    var buf27: Option[Pointer]
    var d23: Int
    var unknown47: Int
    var buf28: Option[Pointer]
    var d24: Int
    var unknown48: Int
    var buf29: Option[Pointer]
    var d25: Int
    var unknown49: Int
    var buf30: Option[Pointer]
    var d26: Int
    var unknown50: Int
    var buf31: Option[Pointer]
    var d27: Int
    var unknown51: Int
    var buf32: Option[Pointer]
    var d28: Int
    var unknown52: Int
    var buf33: Option[Pointer]
    var d29: Int
    var unknown53: Int
    var buf34: Option[Pointer]
    var unknown54: Option[Pointer]
    var buf35: Option[Pointer]
    var d30: Int
    var unknown55: Int
    var buf36: Option[Pointer]
    var d31: Int
    var unknown56: Int
    var buf37: Option[Pointer]
    var d32: Int
    var unknown57: Int
    var buf38: Option[Pointer]
    var d33: Int
    var unknown58: Int
    var buf39: Option[Pointer]
    var d34: Int
    var unknown59: Int
    var buf40: Option[Pointer]
    var d35: Int
    var unknown60: Int
    var buf41: Option[Pointer]
    var d36: Int
    var unknown61: Int
    var buf42: Option[Pointer]
    var d37: Int
    var unknown62: Int
    var buf43: Option[Pointer]
    var d38: Int
    var unknown63: Int
    var buf44: Option[Pointer]
    var d39: Int
    var unknown64: Int
    var buf45: Option[Pointer]
    var d40: Int
    var unknown65: Int
    var buf46: Option[Pointer]
    var d41: Int
    var unknown66: Int
    var buf47: Option[Pointer]
    var unknown67: Option[Pointer]
    var buf48: Option[Pointer]
    var d42: Int
    var unknown68: Int
    var buf49: Option[Pointer]
    var d43: Int
    var unknown69: Int
    var buf50: Option[Pointer]
    var d44: Int
    var unknown70: Int
    var buf51: Option[Pointer]
    var unknown71: Option[Pointer]
    var buf52: Option[Pointer]
    var d45: Int
    var unknown72: Int
    var buf53: Option[Pointer]
    var d46: Int
    var unknown73: Int
    var buf54: Option[Pointer]
    var d47: Int
    var unknown74: Int
    var buf55: Option[Pointer]
    var d48: Int
    var unknown75: Int
    var buf56: Option[Pointer]
    var d49: Int
    var unknown76: Int
    var buf57: Option[Pointer]
    var d50: Int
    var unknown77: Int
    var buf58: Option[Pointer]
    var d51: Int
    var unknown78: Int
    var buf59: Option[Pointer]
    var d52: Int
    var unknown79: Int
    var buf60: Option[Pointer]
    var d53: Int
    var unknown80: Int
    var buf61: Option[Pointer]
    var d54: Int
    var unknown81: Int
    var buf62: Option[Pointer]
    var d55: Int
    var unknown82: Int
    var buf63: Option[Pointer]
    var d56: Int
    var unknown83: Int
    var tid1: Int
    var e: Bool
    var unknown84: Void
    var tid2: Int
    var e1: Bool
    var unknown85: Void
    var tid3: Int
    var e2: Bool
    var unknown86: Void
    var tid4: Int
    var e3: Bool
    var unknown87: Void
    var tid5: Int
    var e4: Bool
    var unknown88: Void
    var tid6: Int
    var e5: Bool
    var unknown89: Void
    var tid7: Int
    var e6: Bool
    var unknown90: Void
    var tid8: Int
    var e7: Bool
    var unknown91: Void
    var tid9: Int
    var e8: Bool
    var unknown92: Void
    var tid10: Int
    var e9: Bool
    var unknown93: Void
    var tid11: Int
    var e10: Bool
    var unknown94: Void
    var tid12: Int
    var e11: Bool
    var unknown95: Void
    var tid13: Int
    var e12: Bool
    var unknown96: Void
    var tid14: Int
    var e13: Bool
    var unknown97: Void
    var tid15: Int
    var e14: Bool
    var unknown98: Void
    var tid16: Int
    var e15: Bool
    var unknown99: Void
    var tid17: Int
    var e16: Bool
    var unknown100: Void
    var tid18: Int
    var e17: Bool
    var unknown101: Void
    var tid19: Int
    var e18: Bool
    var unknown102: Void
    var tid20: Int
    var e19: Bool
    var unknown103: Void
    var tid21: Int
    var e20: Bool
    var unknown104: Void
    var tid22: Int
    var e21: Bool
    var unknown105: Void
    var tid23: Int
    var e22: Bool
    var unknown106: Void
    var tid24: Int
    var e23: Bool
    var unknown107: Void
    var tid25: Int
    var e24: Bool
    var unknown108: Void
    var tid26: Int
    var e25: Bool
    var unknown109: Void
    var tid27: Int
    var e26: Bool
    var unknown110: Void
    var tid28: Int
    var e27: Bool
    var unknown111: Void
    var tid29: Int
    var e28: Bool
    var unknown112: Void
    var tid30: Int
    var e29: Bool
    var unknown113: Void
    var tid31: Int
    var e30: Bool
    var unknown114: Void
    var tid32: Int
    var e31: Bool
    var unknown115: Void
    var tid33: Int
    var e32: Bool
    var unknown116: Void
    var tid34: Int
    var e33: Bool
    var unknown117: Void
    var tid35: Int
    var e34: Bool
    var unknown118: Void
    var tid36: Int
    var e35: Bool
    var unknown119: Void
    var tid37: Int
    var e36: Bool
    var unknown120: Void
    var tid38: Int
    var e37: Bool
    var unknown121: Void
    var tid39: Int
    var e38: Bool
    var unknown122: Void
    var tid40: Int
    var e39: Bool
    var unknown123: Void
    var tid41: Int
    var e40: Bool
    var unknown124: Void
    var tid42: Int
    var e41: Bool
    var unknown125: Void
    var tid43: Int
    var e42: Bool
    var unknown126: Void
    var tid44: Int
    var e43: Bool
    var unknown127: Void
    var tid45: Int
    var e44: Bool
    var unknown128: Void
    var tid46: Int
    var e45: Bool
    var unknown129: Void
    var tid47: Int
    var e46: Bool
    var unknown130: Void
    var tid48: Int
    var e47: Bool
    var unknown131: Void
    var tid49: Int
    var e48: Bool
    var unknown132: Void
    var tid50: Int
    var e49: Bool
    var unknown133: Void
    var tid51: Int
    var e50: Bool
    var unknown134: Void
    var tid52: Int
    var e51: Bool
    var unknown135: Void
    var tid53: Int
    var e52: Bool
    var unknown136: Void
    var tid54: Int
    var e53: Bool
    var unknown137: Void
    var tid55: Int
    var e54: Bool
    var unknown138: Void
    var tid56: Int
    var e55: Bool
    var unknown139: Void
    var tid57: Int
    var e56: Bool
    var unknown140: Void
    var flatten: Option[Pointer]
    var flatten1: Option[Pointer]
    var flatten2: Int
    var flatten3: Int
    var flatten4: Int
    var flatten5: Int
    var flatten6: Int
    var flatten7: Int
    var flatten8: Int
    var flatten9: Int
    var flatten10: Int
    var flatten11: Option[Pointer]
    var flatten12: Option[Pointer]
    var flatten13: Int
    var flatten14: Int
    var flatten15: Int
    var flatten16: Int
    var flatten17: Int
    var flatten18: Int
    var flatten19: Int
    var flatten20: Int
    var flatten21: Int
    var flatten22: Option[Pointer]
    var flatten23: Option[Pointer]
    var flatten24: Int
    var flatten25: Int
    var flatten26: Int
    var flatten27: Int
    var flatten28: Int
    var flatten29: Int
    var flatten30: Int
    var flatten31: Int
    var flatten32: Int
    var flatten33: Int
    var flatten34: Int
    var flatten35: Int
    var flatten36: Int
    var flatten37: Int
    var flatten38: Int
    var flatten39: Int
    var flatten40: Int
    var flatten41: Int
    var flatten42: Int
    var flatten43: Int
    var flatten44: Int
    var flatten45: Int
    var flatten46: Int
    var flatten47: Int
    var flatten48: Int
    var flatten49: Int
    var flatten50: Int
    var flatten51: Int
    var flatten52: Int
    var flatten53: Int
    var flatten54: Int
    var flatten55: Int
    var flatten56: Int
    var flatten57: Int
    var flatten58: Int
    var flatten59: Int
    var flatten60: Option[Pointer]
    var flatten61: Option[Pointer]
    var flatten62: Int
    var flatten63: Int
    var flatten64: Int
    var flatten65: Int
    var flatten66: Int
    var flatten67: Int
    var flatten68: Int
    var flatten69: Int
    var flatten70: Int
    var flatten71: Int
    var flatten72: Int
    var flatten73: Int
    var flatten74: Int
    var flatten75: Int
    var flatten76: Int
    var flatten77: Int
    var flatten78: Int
    var flatten79: Int
    var flatten80: Int
    var flatten81: Int
    var flatten82: Int
    var flatten83: Int
    var flatten84: Int
    var flatten85: Int
    var flatten86: Int
    var flatten87: Int
    var flatten88: Int
    var flatten89: Int
    var flatten90: Int
    var flatten91: Int
    var flatten92: Int
    var flatten93: Int
    var flatten94: Int
    var flatten95: Int
    var flatten96: Int
    var flatten97: Int
    var flatten98: Option[Pointer]
    var flatten99: Option[Pointer]
    var flatten100: Int
    var flatten101: Int
    var flatten102: Int
    var flatten103: Int
    var flatten104: Int
    var flatten105: Int
    var flatten106: Int
    var flatten107: Int
    var flatten108: Int
    var flatten109: Int
    var flatten110: Int
    var flatten111: Int
    var flatten112: Int
    var flatten113: Int
    var flatten114: Int
    var flatten115: Int
    var flatten116: Int
    var flatten117: Int
    var flatten118: Int
    var flatten119: Int
    var flatten120: Int
    var flatten121: Int
    var flatten122: Int
    var flatten123: Int
    var flatten124: Int
    var flatten125: Int
    var flatten126: Int
    var flatten127: Int
    var flatten128: Int
    var flatten129: Int
    var flatten130: Int
    var flatten131: Int
    var flatten132: Int
    var flatten133: Int
    var flatten134: Int
    var flatten135: Int
    var flatten136: Option[Pointer]
    var flatten137: Option[Pointer]
    var flatten138: Int
    var flatten139: Int
    var flatten140: Int
    var flatten141: Int
    var flatten142: Int
    var flatten143: Int
    var flatten144: Int
    var flatten145: Int
    var flatten146: Int
    var flatten147: Option[Pointer]
    var flatten148: Option[Pointer]
    var flatten149: Int
    var flatten150: Int
    var flatten151: Int
    var flatten152: Int
    var flatten153: Int
    var flatten154: Int
    var flatten155: Int
    var flatten156: Int
    var flatten157: Int
    var flatten158: Int
    var flatten159: Int
    var flatten160: Int
    var flatten161: Int
    var flatten162: Int
    var flatten163: Int
    var flatten164: Int
    var flatten165: Int
    var flatten166: Int
    var flatten167: Int
    var flatten168: Int
    var flatten169: Int
    var flatten170: Int
    var flatten171: Int
    var flatten172: Int
    var flatten173: Int
    var flatten174: Int
    var flatten175: Int
    var flatten176: Int
    var flatten177: Int
    var flatten178: Int
    var flatten179: Int
    var flatten180: Int
    var flatten181: Int
    var flatten182: Int
    var flatten183: Int
    var flatten184: Int
    var flatten185: Bool
    var flatten186: Bool
    var flatten187: Bool
    var flatten188: Bool
    var flatten189: Bool
    var flatten190: Bool
    var flatten191: Bool
    var flatten192: Bool
    var flatten193: Bool
    var flatten194: Bool
    var flatten195: Bool
    var flatten196: Bool
    var flatten197: Bool
    var flatten198: Bool
    var flatten199: Bool
    var flatten200: Bool
    var flatten201: Bool
    var flatten202: Bool
    var flatten203: Bool
    var flatten204: Bool
    var flatten205: Bool
    var flatten206: Bool
    var flatten207: Bool
    var flatten208: Bool
    var flatten209: Bool
    var flatten210: Bool
    var flatten211: Bool
    var flatten212: Bool
    var flatten213: Bool
    var flatten214: Bool
    var flatten215: Bool
    var flatten216: Bool
    var flatten217: Bool
    var flatten218: Bool
    var flatten219: Bool
    var flatten220: Bool
    var flatten221: Bool
    var flatten222: Bool
    var flatten223: Bool
    var flatten224: Bool
    var flatten225: Bool
    var flatten226: Bool
    var flatten227: Bool
    var flatten228: Bool
    var flatten229: Bool
    var flatten230: Bool
    var flatten231: Bool
    var flatten232: Bool
    var flatten233: Bool
    var flatten234: Bool
    var flatten235: Bool
    var flatten236: Bool
    var flatten237: Bool
    var flatten238: Bool
    var flatten239: Bool
    var flatten240: Bool
    var flatten241: Bool
    var flatten242: Int
    var res1: Option[Pointer]
    var flatten243: Option[Pointer]
    var flatten244: Int
    var res2: Option[Pointer]
    var flatten245: Option[Pointer]
    var flatten246: Int
    var res3: Option[Pointer]
    var flatten247: Option[Pointer]
    var flatten248: Int
    var res4: Option[Pointer]
    var flatten249: Option[Pointer]
    var flatten250: Int
    var res5: Option[Pointer]
    var flatten251: Option[Pointer]
    var flatten252: Int
    var res6: Option[Pointer]
    var flatten253: Option[Pointer]
    var flatten254: Int
    var res7: Option[Pointer]
    var flatten255: Option[Pointer]
    var flatten256: Int
    var res8: Option[Pointer]
    var flatten257: Option[Pointer]
    var flatten258: Int
    var flatten259: Int
    var flatten260: Int
    var flatten261: Int
    var flatten262: Int
    var flatten263: Perm
    var flatten264: Perm
    var flatten265: Perm
    var flatten266: Perm
    var flatten267: Perm
    var flatten268: Perm
    var flatten269: Perm
    var flatten270: Perm
    var flatten271: Perm
    var flatten272: Perm
    var flatten273: Perm
    var flatten274: Perm
    var flatten275: Perm
    var flatten276: Perm
    var flatten277: Perm
    var flatten278: Perm
    var flatten279: Perm
    var flatten280: Perm
    var flatten281: Perm
    var flatten282: Perm
    var flatten283: Perm
    var flatten284: Perm
    var flatten285: Perm
    var flatten286: Perm
    var flatten287: Perm
    var flatten288: Perm
    var flatten289: Perm
    var flatten290: Perm
    var flatten291: Perm
    var flatten292: Perm
    var flatten293: Perm
    var flatten294: Perm
    var flatten295: Perm
    var flatten296: Perm
    var flatten297: Perm
    var flatten298: Perm
    var flatten299: Perm
    var flatten300: Perm
    var flatten301: Perm
    var flatten302: Perm
    var flatten303: Perm
    var flatten304: Perm
    var flatten305: Perm
    var flatten306: Perm
    var flatten307: Perm
    var flatten308: Perm
    var flatten309: Perm
    var flatten310: Perm
    var flatten311: Perm
    var flatten312: Perm
    var flatten313: Perm
    var flatten314: Perm
    var flatten315: Perm
    var flatten316: Perm
    var flatten317: Perm
    var flatten318: Perm
    var flatten319: Int
    var res9: Option[Pointer]
    var flatten320: Option[Pointer]
    var flatten321: Int
    var res10: Option[Pointer]
    var flatten322: Option[Pointer]
    var flatten323: Int
    var res11: Option[Pointer]
    var flatten324: Option[Pointer]
    var flatten325: Int
    var res12: Option[Pointer]
    var flatten326: Option[Pointer]
    var flatten327: Int
    var res13: Option[Pointer]
    var flatten328: Option[Pointer]
    var flatten329: Int
    var res14: Option[Pointer]
    var flatten330: Option[Pointer]
    var flatten331: Int
    var res15: Option[Pointer]
    var flatten332: Option[Pointer]
    var flatten333: Int
    var res16: Option[Pointer]
    var flatten334: Option[Pointer]
    var flatten335: Int
    var flatten336: Int
    var flatten337: Int
    var flatten338: Int
    var flatten339: Int
    var flatten340: Perm
    var flatten341: Perm
    var flatten342: Perm
    var flatten343: Perm
    var flatten344: Perm
    var flatten345: Perm
    var flatten346: Perm
    var flatten347: Perm
    var flatten348: Perm
    var flatten349: Perm
    var flatten350: Perm
    var flatten351: Perm
    var flatten352: Perm
    var flatten353: Perm
    var flatten354: Perm
    var flatten355: Perm
    var flatten356: Perm
    var flatten357: Perm
    var flatten358: Perm
    var flatten359: Perm
    var flatten360: Perm
    var flatten361: Perm
    var flatten362: Perm
    var flatten363: Perm
    var flatten364: Perm
    var flatten365: Perm
    var flatten366: Perm
    var flatten367: Perm
    var flatten368: Perm
    var flatten369: Perm
    var flatten370: Perm
    var flatten371: Perm
    var flatten372: Perm
    var flatten373: Perm
    var flatten374: Perm
    var flatten375: Perm
    var flatten376: Perm
    var flatten377: Perm
    var flatten378: Perm
    var flatten379: Perm
    var flatten380: Perm
    var flatten381: Perm
    var flatten382: Perm
    var flatten383: Perm
    var flatten384: Perm
    var flatten385: Perm
    var flatten386: Perm
    var flatten387: Perm
    var flatten388: Perm
    var flatten389: Perm
    var flatten390: Perm
    var flatten391: Perm
    var flatten392: Perm
    var flatten393: Perm
    var flatten394: Perm
    var flatten395: Perm
    var res17: Option[Pointer]
    var flatten396: Option[Pointer]
    var flatten397: Int
    var flatten398: Int
    var flatten399: Int
    var flatten400: Int
    var flatten401: Int
    var flatten402: Int
    var flatten403: Int
    var flatten404: Int
    var flatten405: Int
    var flatten406: Perm
    var flatten407: Int
    var flatten408: Int
    var flatten409: Int
    var flatten410: Int
    var flatten411: Int
    var flatten412: Int
    var res18: Option[Pointer]
    var flatten413: Option[Pointer]
    var flatten414: Perm
    var flatten415: Perm
    var flatten416: Perm
    var flatten417: Perm
    var flatten418: Int
    var flatten419: Perm
    var flatten420: Perm
    var flatten421: Perm
    var flatten422: Perm
    var flatten423: Perm
    var flatten424: Int
    var flatten425: Perm
    var flatten426: Perm
    var flatten427: Perm
    var flatten428: Perm
    var flatten429: Perm
    var flatten430: Int
    var flatten431: Perm
    var flatten432: Perm
    var flatten433: Perm
    var flatten434: Perm
    var flatten435: Perm
    var flatten436: Int
    var flatten437: Perm
    var flatten438: Int
    var flatten439: Int
    var flatten440: Int
    var flatten441: Int
    var flatten442: Perm
    var flatten443: Perm
    var flatten444: Perm
    var res19: Option[Pointer]
    var flatten445: Option[Pointer]
    var res20: Option[Pointer]
    var flatten446: Option[Pointer]
    var res21: Option[Pointer]
    var flatten447: Option[Pointer]
    var res22: Option[Pointer]
    var flatten448: Option[Pointer]
    var flatten449: Int
    var flatten450: Int
    var flatten451: Int
    var flatten452: Int
    var flatten453: Int
    var flatten454: Int
    var flatten455: Perm
    var flatten456: Int
    var flatten457: Perm
    var flatten458: Int
    var flatten459: Perm
    var flatten460: Int
    var flatten461: Perm
    var flatten462: Int
    var flatten463: Int
    var flatten464: Int
    var flatten465: Int
    var res23: Option[Pointer]
    var flatten466: Option[Pointer]
    var res24: Option[Pointer]
    var flatten467: Option[Pointer]
    var res25: Option[Pointer]
    var flatten468: Option[Pointer]
    var res26: Option[Pointer]
    var flatten469: Option[Pointer]
    var flatten470: Int
    var flatten471: Int
    var flatten472: Int
    var flatten473: Int
    var flatten474: Int
    var flatten475: Int
    var flatten476: Int
    var flatten477: Int
    var flatten478: Int
    var flatten479: Int
    var flatten480: Bool
    var flatten481: Int
    var flatten482: Int
    var flatten483: Int
    var res27: Option[Pointer]
    var flatten484: Option[Pointer]
    var res28: Option[Pointer]
    var flatten485: Option[Pointer]
    var flatten486: Int
    var excbeforeloop: Ref
    var excbeforeloop1: Ref
    var excbeforeloop2: Ref
    var excbeforeloop3: Ref
    var excbeforeloop4: Ref
    var excbeforeloop5: Ref
    var excbeforeloop6: Ref
    var excbeforeloop7: Ref
    var excbeforeloop8: Ref
    var excbeforeloop9: Ref
    var excbeforeloop10: Ref
    var excbeforeloop11: Ref
    var excbeforeloop12: Ref
    var excbeforeloop13: Ref
    var excbeforeloop14: Ref
    var excbeforeloop15: Ref
    exc := null
    buf := ant1Buffer
    flatten := ptrDeref(ptrAdd(optGet2(buf), 0)).ref.host1
    unknown20 := flatten
    goto UNKNOWN
    label UNKNOWN
    flatten1 := unknown20
    ant1 := flatten1
    buf1 := ant1Buffer
    flatten2 := 0
    d := flatten2
    flatten3 := ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(buf1), 0)).ref.dim1),
      d)).ref.min
    unknown21 := flatten3
    goto UNKNOWN1
    label UNKNOWN1
    flatten4 := unknown21
    ant1Min0 := flatten4
    buf2 := ant1Buffer
    flatten5 := 0
    d1 := flatten5
    flatten6 := ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(buf2), 0)).ref.dim1),
      d1)).ref.extent
    unknown22 := flatten6
    goto UNKNOWN2
    label UNKNOWN2
    flatten7 := unknown22
    ant1Extent0 := flatten7
    buf3 := ant1Buffer
    flatten8 := 0
    d2 := flatten8
    flatten9 := ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(buf3), 0)).ref.dim1),
      d2)).ref.stride
    unknown23 := flatten9
    goto UNKNOWN3
    label UNKNOWN3
    flatten10 := unknown23
    ant1Stride0 := flatten10
    buf4 := ant2Buffer
    flatten11 := ptrDeref(ptrAdd(optGet2(buf4), 0)).ref.host1
    unknown24 := flatten11
    goto UNKNOWN4
    label UNKNOWN4
    flatten12 := unknown24
    ant2 := flatten12
    buf5 := ant2Buffer
    flatten13 := 0
    d3 := flatten13
    flatten14 := ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(buf5), 0)).ref.dim1),
      d3)).ref.min
    unknown25 := flatten14
    goto UNKNOWN5
    label UNKNOWN5
    flatten15 := unknown25
    ant2Min0 := flatten15
    buf6 := ant2Buffer
    flatten16 := 0
    d4 := flatten16
    flatten17 := ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(buf6), 0)).ref.dim1),
      d4)).ref.extent
    unknown26 := flatten17
    goto UNKNOWN6
    label UNKNOWN6
    flatten18 := unknown26
    ant2Extent0 := flatten18
    buf7 := ant2Buffer
    flatten19 := 0
    d5 := flatten19
    flatten20 := ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(buf7), 0)).ref.dim1),
      d5)).ref.stride
    unknown27 := flatten20
    goto UNKNOWN7
    label UNKNOWN7
    flatten21 := unknown27
    ant2Stride0 := flatten21
    buf8 := modelBuffer
    flatten22 := ptrDeref(ptrAdd(optGet2(buf8), 0)).ref.host2
    unknown28 := flatten22
    goto UNKNOWN8
    label UNKNOWN8
    flatten23 := unknown28
    model := flatten23
    buf9 := modelBuffer
    flatten24 := 0
    d6 := flatten24
    flatten25 := ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(buf9), 0)).ref.dim2),
      d6)).ref.min
    unknown29 := flatten25
    goto UNKNOWN9
    label UNKNOWN9
    flatten26 := unknown29
    modelMin0 := flatten26
    buf10 := modelBuffer
    flatten27 := 0
    d7 := flatten27
    flatten28 := ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(buf10), 0)).ref.dim2),
      d7)).ref.extent
    unknown30 := flatten28
    goto UNKNOWN10
    label UNKNOWN10
    flatten29 := unknown30
    modelExtent0 := flatten29
    buf11 := modelBuffer
    flatten30 := 0
    d8 := flatten30
    flatten31 := ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(buf11), 0)).ref.dim2),
      d8)).ref.stride
    unknown31 := flatten31
    goto UNKNOWN11
    label UNKNOWN11
    flatten32 := unknown31
    modelStride0 := flatten32
    buf12 := modelBuffer
    flatten33 := 1
    d9 := flatten33
    flatten34 := ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(buf12), 0)).ref.dim2),
      d9)).ref.min
    unknown32 := flatten34
    goto UNKNOWN12
    label UNKNOWN12
    flatten35 := unknown32
    modelMin1 := flatten35
    buf13 := modelBuffer
    flatten36 := 1
    d10 := flatten36
    flatten37 := ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(buf13), 0)).ref.dim2),
      d10)).ref.extent
    unknown33 := flatten37
    goto UNKNOWN13
    label UNKNOWN13
    flatten38 := unknown33
    modelExtent1 := flatten38
    buf14 := modelBuffer
    flatten39 := 1
    d11 := flatten39
    flatten40 := ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(buf14), 0)).ref.dim2),
      d11)).ref.stride
    unknown34 := flatten40
    goto UNKNOWN14
    label UNKNOWN14
    flatten41 := unknown34
    modelStride1 := flatten41
    buf15 := modelBuffer
    flatten42 := 2
    d12 := flatten42
    flatten43 := ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(buf15), 0)).ref.dim2),
      d12)).ref.min
    unknown35 := flatten43
    goto UNKNOWN15
    label UNKNOWN15
    flatten44 := unknown35
    modelMin2 := flatten44
    buf16 := modelBuffer
    flatten45 := 2
    d13 := flatten45
    flatten46 := ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(buf16), 0)).ref.dim2),
      d13)).ref.extent
    unknown36 := flatten46
    goto UNKNOWN16
    label UNKNOWN16
    flatten47 := unknown36
    modelExtent2 := flatten47
    buf17 := modelBuffer
    flatten48 := 2
    d14 := flatten48
    flatten49 := ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(buf17), 0)).ref.dim2),
      d14)).ref.stride
    unknown37 := flatten49
    goto UNKNOWN17
    label UNKNOWN17
    flatten50 := unknown37
    modelStride2 := flatten50
    buf18 := modelBuffer
    flatten51 := 3
    d15 := flatten51
    flatten52 := ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(buf18), 0)).ref.dim2),
      d15)).ref.min
    unknown38 := flatten52
    goto UNKNOWN18
    label UNKNOWN18
    flatten53 := unknown38
    modelMin3 := flatten53
    buf19 := modelBuffer
    flatten54 := 3
    d16 := flatten54
    flatten55 := ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(buf19), 0)).ref.dim2),
      d16)).ref.extent
    unknown39 := flatten55
    goto UNKNOWN19
    label UNKNOWN19
    flatten56 := unknown39
    modelExtent3 := flatten56
    buf20 := modelBuffer
    flatten57 := 3
    d17 := flatten57
    flatten58 := ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(buf20), 0)).ref.dim2),
      d17)).ref.stride
    unknown40 := flatten58
    goto UNKNOWN20
    label UNKNOWN20
    flatten59 := unknown40
    modelStride3 := flatten59
    buf21 := nextSolutionsComplexBuffer
    flatten60 := ptrDeref(ptrAdd(optGet2(buf21), 0)).ref.host
    unknown41 := flatten60
    goto UNKNOWN21
    label UNKNOWN21
    flatten61 := unknown41
    nextSolutionsComplex := flatten61
    buf22 := nextSolutionsComplexBuffer
    flatten62 := 0
    d18 := flatten62
    flatten63 := ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(buf22), 0)).ref.dim),
      d18)).ref.min
    unknown42 := flatten63
    goto UNKNOWN22
    label UNKNOWN22
    flatten64 := unknown42
    nextSolutionsComplexMin0 := flatten64
    buf23 := nextSolutionsComplexBuffer
    flatten65 := 0
    d19 := flatten65
    flatten66 := ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(buf23), 0)).ref.dim),
      d19)).ref.extent
    unknown43 := flatten66
    goto UNKNOWN23
    label UNKNOWN23
    flatten67 := unknown43
    nextSolutionsComplexExtent0 := flatten67
    buf24 := nextSolutionsComplexBuffer
    flatten68 := 0
    d20 := flatten68
    flatten69 := ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(buf24), 0)).ref.dim),
      d20)).ref.stride
    unknown44 := flatten69
    goto UNKNOWN24
    label UNKNOWN24
    flatten70 := unknown44
    nextSolutionsComplexStride0 := flatten70
    buf25 := nextSolutionsComplexBuffer
    flatten71 := 1
    d21 := flatten71
    flatten72 := ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(buf25), 0)).ref.dim),
      d21)).ref.min
    unknown45 := flatten72
    goto UNKNOWN25
    label UNKNOWN25
    flatten73 := unknown45
    nextSolutionsComplexMin1 := flatten73
    buf26 := nextSolutionsComplexBuffer
    flatten74 := 1
    d22 := flatten74
    flatten75 := ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(buf26), 0)).ref.dim),
      d22)).ref.extent
    unknown46 := flatten75
    goto UNKNOWN26
    label UNKNOWN26
    flatten76 := unknown46
    nextSolutionsComplexExtent1 := flatten76
    buf27 := nextSolutionsComplexBuffer
    flatten77 := 1
    d23 := flatten77
    flatten78 := ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(buf27), 0)).ref.dim),
      d23)).ref.stride
    unknown47 := flatten78
    goto UNKNOWN27
    label UNKNOWN27
    flatten79 := unknown47
    nextSolutionsComplexStride1 := flatten79
    buf28 := nextSolutionsComplexBuffer
    flatten80 := 2
    d24 := flatten80
    flatten81 := ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(buf28), 0)).ref.dim),
      d24)).ref.min
    unknown48 := flatten81
    goto UNKNOWN28
    label UNKNOWN28
    flatten82 := unknown48
    nextSolutionsComplexMin2 := flatten82
    buf29 := nextSolutionsComplexBuffer
    flatten83 := 2
    d25 := flatten83
    flatten84 := ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(buf29), 0)).ref.dim),
      d25)).ref.extent
    unknown49 := flatten84
    goto UNKNOWN29
    label UNKNOWN29
    flatten85 := unknown49
    nextSolutionsComplexExtent2 := flatten85
    buf30 := nextSolutionsComplexBuffer
    flatten86 := 2
    d26 := flatten86
    flatten87 := ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(buf30), 0)).ref.dim),
      d26)).ref.stride
    unknown50 := flatten87
    goto UNKNOWN30
    label UNKNOWN30
    flatten88 := unknown50
    nextSolutionsComplexStride2 := flatten88
    buf31 := nextSolutionsComplexBuffer
    flatten89 := 3
    d27 := flatten89
    flatten90 := ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(buf31), 0)).ref.dim),
      d27)).ref.min
    unknown51 := flatten90
    goto UNKNOWN31
    label UNKNOWN31
    flatten91 := unknown51
    nextSolutionsComplexMin3 := flatten91
    buf32 := nextSolutionsComplexBuffer
    flatten92 := 3
    d28 := flatten92
    flatten93 := ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(buf32), 0)).ref.dim),
      d28)).ref.extent
    unknown52 := flatten93
    goto UNKNOWN32
    label UNKNOWN32
    flatten94 := unknown52
    nextSolutionsComplexExtent3 := flatten94
    buf33 := nextSolutionsComplexBuffer
    flatten95 := 3
    d29 := flatten95
    flatten96 := ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(buf33), 0)).ref.dim),
      d29)).ref.stride
    unknown53 := flatten96
    goto UNKNOWN33
    label UNKNOWN33
    flatten97 := unknown53
    nextSolutionsComplexStride3 := flatten97
    buf34 := solBuffer
    flatten98 := ptrDeref(ptrAdd(optGet2(buf34), 0)).ref.host
    unknown54 := flatten98
    goto UNKNOWN34
    label UNKNOWN34
    flatten99 := unknown54
    sol := flatten99
    buf35 := solBuffer
    flatten100 := 0
    d30 := flatten100
    flatten101 := ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(buf35), 0)).ref.dim),
      d30)).ref.min
    unknown55 := flatten101
    goto UNKNOWN35
    label UNKNOWN35
    flatten102 := unknown55
    solMin0 := flatten102
    buf36 := solBuffer
    flatten103 := 0
    d31 := flatten103
    flatten104 := ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(buf36), 0)).ref.dim),
      d31)).ref.extent
    unknown56 := flatten104
    goto UNKNOWN36
    label UNKNOWN36
    flatten105 := unknown56
    solExtent0 := flatten105
    buf37 := solBuffer
    flatten106 := 0
    d32 := flatten106
    flatten107 := ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(buf37), 0)).ref.dim),
      d32)).ref.stride
    unknown57 := flatten107
    goto UNKNOWN37
    label UNKNOWN37
    flatten108 := unknown57
    solStride0 := flatten108
    buf38 := solBuffer
    flatten109 := 1
    d33 := flatten109
    flatten110 := ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(buf38), 0)).ref.dim),
      d33)).ref.min
    unknown58 := flatten110
    goto UNKNOWN38
    label UNKNOWN38
    flatten111 := unknown58
    solMin1 := flatten111
    buf39 := solBuffer
    flatten112 := 1
    d34 := flatten112
    flatten113 := ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(buf39), 0)).ref.dim),
      d34)).ref.extent
    unknown59 := flatten113
    goto UNKNOWN39
    label UNKNOWN39
    flatten114 := unknown59
    solExtent1 := flatten114
    buf40 := solBuffer
    flatten115 := 1
    d35 := flatten115
    flatten116 := ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(buf40), 0)).ref.dim),
      d35)).ref.stride
    unknown60 := flatten116
    goto UNKNOWN40
    label UNKNOWN40
    flatten117 := unknown60
    solStride1 := flatten117
    buf41 := solBuffer
    flatten118 := 2
    d36 := flatten118
    flatten119 := ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(buf41), 0)).ref.dim),
      d36)).ref.min
    unknown61 := flatten119
    goto UNKNOWN41
    label UNKNOWN41
    flatten120 := unknown61
    solMin2 := flatten120
    buf42 := solBuffer
    flatten121 := 2
    d37 := flatten121
    flatten122 := ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(buf42), 0)).ref.dim),
      d37)).ref.extent
    unknown62 := flatten122
    goto UNKNOWN42
    label UNKNOWN42
    flatten123 := unknown62
    solExtent2 := flatten123
    buf43 := solBuffer
    flatten124 := 2
    d38 := flatten124
    flatten125 := ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(buf43), 0)).ref.dim),
      d38)).ref.stride
    unknown63 := flatten125
    goto UNKNOWN43
    label UNKNOWN43
    flatten126 := unknown63
    solStride2 := flatten126
    buf44 := solBuffer
    flatten127 := 3
    d39 := flatten127
    flatten128 := ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(buf44), 0)).ref.dim),
      d39)).ref.min
    unknown64 := flatten128
    goto UNKNOWN44
    label UNKNOWN44
    flatten129 := unknown64
    solMin3 := flatten129
    buf45 := solBuffer
    flatten130 := 3
    d40 := flatten130
    flatten131 := ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(buf45), 0)).ref.dim),
      d40)).ref.extent
    unknown65 := flatten131
    goto UNKNOWN45
    label UNKNOWN45
    flatten132 := unknown65
    solExtent3 := flatten132
    buf46 := solBuffer
    flatten133 := 3
    d41 := flatten133
    flatten134 := ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(buf46), 0)).ref.dim),
      d41)).ref.stride
    unknown66 := flatten134
    goto UNKNOWN46
    label UNKNOWN46
    flatten135 := unknown66
    solStride3 := flatten135
    buf47 := solutionMapBuffer
    flatten136 := ptrDeref(ptrAdd(optGet2(buf47), 0)).ref.host1
    unknown67 := flatten136
    goto UNKNOWN47
    label UNKNOWN47
    flatten137 := unknown67
    solutionMap := flatten137
    buf48 := solutionMapBuffer
    flatten138 := 0
    d42 := flatten138
    flatten139 := ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(buf48), 0)).ref.dim1),
      d42)).ref.min
    unknown68 := flatten139
    goto UNKNOWN48
    label UNKNOWN48
    flatten140 := unknown68
    solutionMapMin0 := flatten140
    buf49 := solutionMapBuffer
    flatten141 := 0
    d43 := flatten141
    flatten142 := ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(buf49), 0)).ref.dim1),
      d43)).ref.extent
    unknown69 := flatten142
    goto UNKNOWN49
    label UNKNOWN49
    flatten143 := unknown69
    solutionMapExtent0 := flatten143
    buf50 := solutionMapBuffer
    flatten144 := 0
    d44 := flatten144
    flatten145 := ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(buf50), 0)).ref.dim1),
      d44)).ref.stride
    unknown70 := flatten145
    goto UNKNOWN50
    label UNKNOWN50
    flatten146 := unknown70
    solutionMapStride0 := flatten146
    buf51 := vResInBuffer
    flatten147 := ptrDeref(ptrAdd(optGet2(buf51), 0)).ref.host2
    unknown71 := flatten147
    goto UNKNOWN51
    label UNKNOWN51
    flatten148 := unknown71
    vResIn := flatten148
    buf52 := vResInBuffer
    flatten149 := 0
    d45 := flatten149
    flatten150 := ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(buf52), 0)).ref.dim2),
      d45)).ref.min
    unknown72 := flatten150
    goto UNKNOWN52
    label UNKNOWN52
    flatten151 := unknown72
    vResInMin0 := flatten151
    buf53 := vResInBuffer
    flatten152 := 0
    d46 := flatten152
    flatten153 := ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(buf53), 0)).ref.dim2),
      d46)).ref.extent
    unknown73 := flatten153
    goto UNKNOWN53
    label UNKNOWN53
    flatten154 := unknown73
    vResInExtent0 := flatten154
    buf54 := vResInBuffer
    flatten155 := 0
    d47 := flatten155
    flatten156 := ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(buf54), 0)).ref.dim2),
      d47)).ref.stride
    unknown74 := flatten156
    goto UNKNOWN54
    label UNKNOWN54
    flatten157 := unknown74
    vResInStride0 := flatten157
    buf55 := vResInBuffer
    flatten158 := 1
    d48 := flatten158
    flatten159 := ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(buf55), 0)).ref.dim2),
      d48)).ref.min
    unknown75 := flatten159
    goto UNKNOWN55
    label UNKNOWN55
    flatten160 := unknown75
    vResInMin1 := flatten160
    buf56 := vResInBuffer
    flatten161 := 1
    d49 := flatten161
    flatten162 := ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(buf56), 0)).ref.dim2),
      d49)).ref.extent
    unknown76 := flatten162
    goto UNKNOWN56
    label UNKNOWN56
    flatten163 := unknown76
    vResInExtent1 := flatten163
    buf57 := vResInBuffer
    flatten164 := 1
    d50 := flatten164
    flatten165 := ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(buf57), 0)).ref.dim2),
      d50)).ref.stride
    unknown77 := flatten165
    goto UNKNOWN57
    label UNKNOWN57
    flatten166 := unknown77
    vResInStride1 := flatten166
    buf58 := vResInBuffer
    flatten167 := 2
    d51 := flatten167
    flatten168 := ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(buf58), 0)).ref.dim2),
      d51)).ref.min
    unknown78 := flatten168
    goto UNKNOWN58
    label UNKNOWN58
    flatten169 := unknown78
    vResInMin2 := flatten169
    buf59 := vResInBuffer
    flatten170 := 2
    d52 := flatten170
    flatten171 := ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(buf59), 0)).ref.dim2),
      d52)).ref.extent
    unknown79 := flatten171
    goto UNKNOWN59
    label UNKNOWN59
    flatten172 := unknown79
    vResInExtent2 := flatten172
    buf60 := vResInBuffer
    flatten173 := 2
    d53 := flatten173
    flatten174 := ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(buf60), 0)).ref.dim2),
      d53)).ref.stride
    unknown80 := flatten174
    goto UNKNOWN60
    label UNKNOWN60
    flatten175 := unknown80
    vResInStride2 := flatten175
    buf61 := vResInBuffer
    flatten176 := 3
    d54 := flatten176
    flatten177 := ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(buf61), 0)).ref.dim2),
      d54)).ref.min
    unknown81 := flatten177
    goto UNKNOWN61
    label UNKNOWN61
    flatten178 := unknown81
    vResInMin3 := flatten178
    buf62 := vResInBuffer
    flatten179 := 3
    d55 := flatten179
    flatten180 := ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(buf62), 0)).ref.dim2),
      d55)).ref.extent
    unknown82 := flatten180
    goto UNKNOWN62
    label UNKNOWN62
    flatten181 := unknown82
    vResInExtent3 := flatten181
    buf63 := vResInBuffer
    flatten182 := 3
    d56 := flatten182
    flatten183 := ptrDeref(ptrAdd(optGet2(ptrDeref(ptrAdd(optGet2(buf63), 0)).ref.dim2),
      d56)).ref.stride
    unknown83 := flatten183
    goto UNKNOWN63
    label UNKNOWN63
    flatten184 := unknown83
    vResInStride3 := flatten184
    tid1 := tid
    flatten185 := ant1Stride0 == 1
    e := flatten185
    label UNKNOWN64
    tid2 := tid
    flatten186 := ant1Min0 == 0
    e1 := flatten186
    label UNKNOWN65
    tid3 := tid
    flatten187 := ant1Extent0 == 230930
    e2 := flatten187
    label UNKNOWN66
    tid4 := tid
    flatten188 := ant2Stride0 == 1
    e3 := flatten188
    label UNKNOWN67
    tid5 := tid
    flatten189 := ant2Min0 == 0
    e4 := flatten189
    label UNKNOWN68
    tid6 := tid
    flatten190 := ant2Extent0 == 230930
    e5 := flatten190
    label UNKNOWN69
    tid7 := tid
    flatten191 := modelStride0 == 1
    e6 := flatten191
    label UNKNOWN70
    tid8 := tid
    flatten192 := modelMin0 == 0
    e7 := flatten192
    label UNKNOWN71
    tid9 := tid
    flatten193 := modelExtent0 == 2
    e8 := flatten193
    label UNKNOWN72
    tid10 := tid
    flatten194 := modelStride1 == 2
    e9 := flatten194
    label UNKNOWN73
    tid11 := tid
    flatten195 := modelMin1 == 0
    e10 := flatten195
    label UNKNOWN74
    tid12 := tid
    flatten196 := modelExtent1 == 2
    e11 := flatten196
    label UNKNOWN75
    tid13 := tid
    flatten197 := modelStride2 == 4
    e12 := flatten197
    label UNKNOWN76
    tid14 := tid
    flatten198 := modelMin2 == 0
    e13 := flatten198
    label UNKNOWN77
    tid15 := tid
    flatten199 := modelExtent2 == 2
    e14 := flatten199
    label UNKNOWN78
    tid16 := tid
    flatten200 := modelStride3 == 8
    e15 := flatten200
    label UNKNOWN79
    tid17 := tid
    flatten201 := modelMin3 == 0
    e16 := flatten201
    label UNKNOWN80
    tid18 := tid
    flatten202 := modelExtent3 == 230930
    e17 := flatten202
    label UNKNOWN81
    tid19 := tid
    flatten203 := nextSolutionsComplexStride0 == 1
    e18 := flatten203
    label UNKNOWN82
    tid20 := tid
    flatten204 := nextSolutionsComplexMin0 == 0
    e19 := flatten204
    label UNKNOWN83
    tid21 := tid
    flatten205 := nextSolutionsComplexExtent0 == 2
    e20 := flatten205
    label UNKNOWN84
    tid22 := tid
    flatten206 := nextSolutionsComplexStride1 == 2
    e21 := flatten206
    label UNKNOWN85
    tid23 := tid
    flatten207 := nextSolutionsComplexMin1 == 0
    e22 := flatten207
    label UNKNOWN86
    tid24 := tid
    flatten208 := nextSolutionsComplexExtent1 == 2
    e23 := flatten208
    label UNKNOWN87
    tid25 := tid
    flatten209 := nextSolutionsComplexStride2 == 4
    e24 := flatten209
    label UNKNOWN88
    tid26 := tid
    flatten210 := nextSolutionsComplexMin2 == 0
    e25 := flatten210
    label UNKNOWN89
    tid27 := tid
    flatten211 := nextSolutionsComplexExtent2 == 3
    e26 := flatten211
    label UNKNOWN90
    tid28 := tid
    flatten212 := nextSolutionsComplexStride3 == 32
    e27 := flatten212
    label UNKNOWN91
    tid29 := tid
    flatten213 := nextSolutionsComplexMin3 == 0
    e28 := flatten213
    label UNKNOWN92
    tid30 := tid
    flatten214 := nextSolutionsComplexExtent3 == 50
    e29 := flatten214
    label UNKNOWN93
    tid31 := tid
    flatten215 := solStride0 == 1
    e30 := flatten215
    label UNKNOWN94
    tid32 := tid
    flatten216 := solMin0 == 0
    e31 := flatten216
    label UNKNOWN95
    tid33 := tid
    flatten217 := solExtent0 == 2
    e32 := flatten217
    label UNKNOWN96
    tid34 := tid
    flatten218 := solStride1 == 2
    e33 := flatten218
    label UNKNOWN97
    tid35 := tid
    flatten219 := solMin1 == 0
    e34 := flatten219
    label UNKNOWN98
    tid36 := tid
    flatten220 := solExtent1 == 2
    e35 := flatten220
    label UNKNOWN99
    tid37 := tid
    flatten221 := solStride2 == 4
    e36 := flatten221
    label UNKNOWN100
    tid38 := tid
    flatten222 := solMin2 == 0
    e37 := flatten222
    label UNKNOWN101
    tid39 := tid
    flatten223 := solExtent2 == 8
    e38 := flatten223
    label UNKNOWN102
    tid40 := tid
    flatten224 := solStride3 == 32
    e39 := flatten224
    label UNKNOWN103
    tid41 := tid
    flatten225 := solMin3 == 0
    e40 := flatten225
    label UNKNOWN104
    tid42 := tid
    flatten226 := solExtent3 == 50
    e41 := flatten226
    label UNKNOWN105
    tid43 := tid
    flatten227 := solutionMapStride0 == 1
    e42 := flatten227
    label UNKNOWN106
    tid44 := tid
    flatten228 := solutionMapMin0 == 0
    e43 := flatten228
    label UNKNOWN107
    tid45 := tid
    flatten229 := solutionMapExtent0 == 230930
    e44 := flatten229
    label UNKNOWN108
    tid46 := tid
    flatten230 := vResInStride0 == 1
    e45 := flatten230
    label UNKNOWN109
    tid47 := tid
    flatten231 := vResInMin0 == 0
    e46 := flatten231
    label UNKNOWN110
    tid48 := tid
    flatten232 := vResInExtent0 == 2
    e47 := flatten232
    label UNKNOWN111
    tid49 := tid
    flatten233 := vResInStride1 == 2
    e48 := flatten233
    label UNKNOWN112
    tid50 := tid
    flatten234 := vResInMin1 == 0
    e49 := flatten234
    label UNKNOWN113
    tid51 := tid
    flatten235 := vResInExtent1 == 2
    e50 := flatten235
    label UNKNOWN114
    tid52 := tid
    flatten236 := vResInStride2 == 4
    e51 := flatten236
    label UNKNOWN115
    tid53 := tid
    flatten237 := vResInMin2 == 0
    e52 := flatten237
    label UNKNOWN116
    tid54 := tid
    flatten238 := vResInExtent2 == 2
    e53 := flatten238
    label UNKNOWN117
    tid55 := tid
    flatten239 := vResInStride3 == 8
    e54 := flatten239
    label UNKNOWN118
    tid56 := tid
    flatten240 := vResInMin3 == 0
    e55 := flatten240
    label UNKNOWN119
    tid57 := tid
    flatten241 := vResInExtent3 == 230930
    e56 := flatten241
    label UNKNOWN120
    flatten242 := 230930
    _255 := flatten242
    res1 := make_pointer_array_float32(tid, _255)
    flatten243 := res1
    corModel20 := flatten243
    fold acc(floatPerm(corModel20), write)
    flatten244 := 230930
    _256 := flatten244
    res2 := make_pointer_array_float32(tid, _256)
    flatten245 := res2
    corModel21 := flatten245
    fold acc(floatPerm(corModel21), write)
    flatten246 := 230930
    _257 := flatten246
    res3 := make_pointer_array_float32(tid, _257)
    flatten247 := res3
    corModel22 := flatten247
    fold acc(floatPerm(corModel22), write)
    flatten248 := 230930
    _258 := flatten248
    res4 := make_pointer_array_float32(tid, _258)
    flatten249 := res4
    corModel23 := flatten249
    fold acc(floatPerm(corModel23), write)
    flatten250 := 230930
    _259 := flatten250
    res5 := make_pointer_array_float32(tid, _259)
    flatten251 := res5
    corModel24 := flatten251
    fold acc(floatPerm(corModel24), write)
    flatten252 := 230930
    _260 := flatten252
    res6 := make_pointer_array_float32(tid, _260)
    flatten253 := res6
    corModel25 := flatten253
    fold acc(floatPerm(corModel25), write)
    flatten254 := 230930
    _261 := flatten254
    res7 := make_pointer_array_float32(tid, _261)
    flatten255 := res7
    corModel26 := flatten255
    fold acc(floatPerm(corModel26), write)
    flatten256 := 230930
    _262 := flatten256
    res8 := make_pointer_array_float32(tid, _262)
    flatten257 := res8
    corModel27 := flatten257
    fold acc(floatPerm(corModel27), write)
    label LOOP
    excbeforeloop := exc
    flatten258 := 0
    corModel2S0Vis := flatten258
    while (corModel2S0Vis < 230930)
      invariant exc == excbeforeloop
      invariant 0 <= corModel2S0Vis
      invariant corModel2S0Vis < 230930 + 1
      invariant acc(intPermBound(ant1, 0, 50), scale(1 * write / 2) * write)
      invariant acc(floatPerm(model), scale(1 * write / 2) * write)
      invariant acc(doublePerm(sol), scale(1 * write / 2) * write)
      invariant acc(intPermBound(solutionMap, 0, 3), scale(1 * write / 2) *
        write)
      invariant acc(floatPerm(corModel20), write)
      invariant acc(floatPerm(corModel21), write)
      invariant acc(floatPerm(corModel22), write)
      invariant acc(floatPerm(corModel23), write)
      invariant acc(floatPerm(corModel24), write)
      invariant acc(floatPerm(corModel25), write)
      invariant acc(floatPerm(corModel26), write)
      invariant acc(floatPerm(corModel27), write) 
    {
      unfold acc(intPermBound(solutionMap, 0, 3), scale(1 * write / 2) *
        write)
      flatten260 := ptrDeref(ptrAdd(optGet2(solutionMap), corModel2S0Vis)).int
      _263 := flatten260
      fold acc(intPermBound(solutionMap, 0, 3), scale(1 * write / 2) *
        write)
      unfold acc(intPermBound(ant1, 0, 50), scale(1 * write / 2) * write)
      flatten261 := ptrDeref(ptrAdd(optGet2(ant1), corModel2S0Vis)).int
      _264 := flatten261
      fold acc(intPermBound(ant1, 0, 50), scale(1 * write / 2) * write)
      flatten262 := _263 + _264 * 8
      t12696 := flatten262
      unfold acc(floatPerm(model), scale(1 * write / 2) * write)
      flatten263 := ptrDeref(ptrAdd(optGet2(model), corModel2S0Vis * 8)).rat
      _265 := flatten263
      fold acc(floatPerm(model), scale(1 * write / 2) * write)
      unfold acc(doublePerm(sol), scale(1 * write / 2) * write)
      flatten264 := ptrDeref(ptrAdd(optGet2(sol), t12696 * 4)).rat
      _266 := flatten264
      fold acc(doublePerm(sol), scale(1 * write / 2) * write)
      flatten265 := _266
      _267 := flatten265
      unfold acc(floatPerm(model), scale(1 * write / 2) * write)
      flatten266 := ptrDeref(ptrAdd(optGet2(model), corModel2S0Vis * 8 + 1)).rat
      _268 := flatten266
      fold acc(floatPerm(model), scale(1 * write / 2) * write)
      unfold acc(doublePerm(sol), scale(1 * write / 2) * write)
      flatten267 := ptrDeref(ptrAdd(optGet2(sol), t12696 * 4 + 1)).rat
      _269 := flatten267
      fold acc(doublePerm(sol), scale(1 * write / 2) * write)
      flatten268 := _269
      _270 := flatten268
      unfold acc(floatPerm(corModel20), write)
      flatten269 := _265 * _267 - _268 * _270
      ptrDeref(ptrAdd(optGet2(corModel20), corModel2S0Vis)).rat := flatten269
      fold acc(floatPerm(corModel20), write)
      unfold acc(floatPerm(model), scale(1 * write / 2) * write)
      flatten270 := ptrDeref(ptrAdd(optGet2(model), corModel2S0Vis * 8 + 1)).rat
      _271 := flatten270
      fold acc(floatPerm(model), scale(1 * write / 2) * write)
      unfold acc(doublePerm(sol), scale(1 * write / 2) * write)
      flatten271 := ptrDeref(ptrAdd(optGet2(sol), t12696 * 4)).rat
      _272 := flatten271
      fold acc(doublePerm(sol), scale(1 * write / 2) * write)
      flatten272 := _272
      _273 := flatten272
      unfold acc(floatPerm(model), scale(1 * write / 2) * write)
      flatten273 := ptrDeref(ptrAdd(optGet2(model), corModel2S0Vis * 8)).rat
      _274 := flatten273
      fold acc(floatPerm(model), scale(1 * write / 2) * write)
      unfold acc(doublePerm(sol), scale(1 * write / 2) * write)
      flatten274 := ptrDeref(ptrAdd(optGet2(sol), t12696 * 4 + 1)).rat
      _275 := flatten274
      fold acc(doublePerm(sol), scale(1 * write / 2) * write)
      flatten275 := _275
      _276 := flatten275
      unfold acc(floatPerm(corModel21), write)
      flatten276 := _271 * _273 + _274 * _276
      ptrDeref(ptrAdd(optGet2(corModel21), corModel2S0Vis)).rat := flatten276
      fold acc(floatPerm(corModel21), write)
      unfold acc(floatPerm(model), scale(1 * write / 2) * write)
      flatten277 := ptrDeref(ptrAdd(optGet2(model), corModel2S0Vis * 8 + 2)).rat
      _277 := flatten277
      fold acc(floatPerm(model), scale(1 * write / 2) * write)
      unfold acc(doublePerm(sol), scale(1 * write / 2) * write)
      flatten278 := ptrDeref(ptrAdd(optGet2(sol), t12696 * 4)).rat
      _278 := flatten278
      fold acc(doublePerm(sol), scale(1 * write / 2) * write)
      flatten279 := _278
      _279 := flatten279
      unfold acc(floatPerm(model), scale(1 * write / 2) * write)
      flatten280 := ptrDeref(ptrAdd(optGet2(model), corModel2S0Vis * 8 + 3)).rat
      _280 := flatten280
      fold acc(floatPerm(model), scale(1 * write / 2) * write)
      unfold acc(doublePerm(sol), scale(1 * write / 2) * write)
      flatten281 := ptrDeref(ptrAdd(optGet2(sol), t12696 * 4 + 1)).rat
      _281 := flatten281
      fold acc(doublePerm(sol), scale(1 * write / 2) * write)
      flatten282 := _281
      _282 := flatten282
      unfold acc(floatPerm(corModel22), write)
      flatten283 := _277 * _279 - _280 * _282
      ptrDeref(ptrAdd(optGet2(corModel22), corModel2S0Vis)).rat := flatten283
      fold acc(floatPerm(corModel22), write)
      unfold acc(floatPerm(model), scale(1 * write / 2) * write)
      flatten284 := ptrDeref(ptrAdd(optGet2(model), corModel2S0Vis * 8 + 3)).rat
      _283 := flatten284
      fold acc(floatPerm(model), scale(1 * write / 2) * write)
      unfold acc(doublePerm(sol), scale(1 * write / 2) * write)
      flatten285 := ptrDeref(ptrAdd(optGet2(sol), t12696 * 4)).rat
      _284 := flatten285
      fold acc(doublePerm(sol), scale(1 * write / 2) * write)
      flatten286 := _284
      _285 := flatten286
      unfold acc(floatPerm(model), scale(1 * write / 2) * write)
      flatten287 := ptrDeref(ptrAdd(optGet2(model), corModel2S0Vis * 8 + 2)).rat
      _286 := flatten287
      fold acc(floatPerm(model), scale(1 * write / 2) * write)
      unfold acc(doublePerm(sol), scale(1 * write / 2) * write)
      flatten288 := ptrDeref(ptrAdd(optGet2(sol), t12696 * 4 + 1)).rat
      _287 := flatten288
      fold acc(doublePerm(sol), scale(1 * write / 2) * write)
      flatten289 := _287
      _288 := flatten289
      unfold acc(floatPerm(corModel23), write)
      flatten290 := _283 * _285 + _286 * _288
      ptrDeref(ptrAdd(optGet2(corModel23), corModel2S0Vis)).rat := flatten290
      fold acc(floatPerm(corModel23), write)
      unfold acc(floatPerm(model), scale(1 * write / 2) * write)
      flatten291 := ptrDeref(ptrAdd(optGet2(model), corModel2S0Vis * 8 + 4)).rat
      _289 := flatten291
      fold acc(floatPerm(model), scale(1 * write / 2) * write)
      unfold acc(doublePerm(sol), scale(1 * write / 2) * write)
      flatten292 := ptrDeref(ptrAdd(optGet2(sol), t12696 * 4 + 2)).rat
      _290 := flatten292
      fold acc(doublePerm(sol), scale(1 * write / 2) * write)
      flatten293 := _290
      _291 := flatten293
      unfold acc(floatPerm(model), scale(1 * write / 2) * write)
      flatten294 := ptrDeref(ptrAdd(optGet2(model), corModel2S0Vis * 8 + 5)).rat
      _292 := flatten294
      fold acc(floatPerm(model), scale(1 * write / 2) * write)
      unfold acc(doublePerm(sol), scale(1 * write / 2) * write)
      flatten295 := ptrDeref(ptrAdd(optGet2(sol), t12696 * 4 + 3)).rat
      _293 := flatten295
      fold acc(doublePerm(sol), scale(1 * write / 2) * write)
      flatten296 := _293
      _294 := flatten296
      unfold acc(floatPerm(corModel24), write)
      flatten297 := _289 * _291 - _292 * _294
      ptrDeref(ptrAdd(optGet2(corModel24), corModel2S0Vis)).rat := flatten297
      fold acc(floatPerm(corModel24), write)
      unfold acc(floatPerm(model), scale(1 * write / 2) * write)
      flatten298 := ptrDeref(ptrAdd(optGet2(model), corModel2S0Vis * 8 + 5)).rat
      _295 := flatten298
      fold acc(floatPerm(model), scale(1 * write / 2) * write)
      unfold acc(doublePerm(sol), scale(1 * write / 2) * write)
      flatten299 := ptrDeref(ptrAdd(optGet2(sol), t12696 * 4 + 2)).rat
      _296 := flatten299
      fold acc(doublePerm(sol), scale(1 * write / 2) * write)
      flatten300 := _296
      _297 := flatten300
      unfold acc(floatPerm(model), scale(1 * write / 2) * write)
      flatten301 := ptrDeref(ptrAdd(optGet2(model), corModel2S0Vis * 8 + 4)).rat
      _298 := flatten301
      fold acc(floatPerm(model), scale(1 * write / 2) * write)
      unfold acc(doublePerm(sol), scale(1 * write / 2) * write)
      flatten302 := ptrDeref(ptrAdd(optGet2(sol), t12696 * 4 + 3)).rat
      _299 := flatten302
      fold acc(doublePerm(sol), scale(1 * write / 2) * write)
      flatten303 := _299
      _300 := flatten303
      unfold acc(floatPerm(corModel25), write)
      flatten304 := _295 * _297 + _298 * _300
      ptrDeref(ptrAdd(optGet2(corModel25), corModel2S0Vis)).rat := flatten304
      fold acc(floatPerm(corModel25), write)
      unfold acc(floatPerm(model), scale(1 * write / 2) * write)
      flatten305 := ptrDeref(ptrAdd(optGet2(model), corModel2S0Vis * 8 + 6)).rat
      _301 := flatten305
      fold acc(floatPerm(model), scale(1 * write / 2) * write)
      unfold acc(doublePerm(sol), scale(1 * write / 2) * write)
      flatten306 := ptrDeref(ptrAdd(optGet2(sol), t12696 * 4 + 2)).rat
      _302 := flatten306
      fold acc(doublePerm(sol), scale(1 * write / 2) * write)
      flatten307 := _302
      _303 := flatten307
      unfold acc(floatPerm(model), scale(1 * write / 2) * write)
      flatten308 := ptrDeref(ptrAdd(optGet2(model), corModel2S0Vis * 8 + 7)).rat
      _304 := flatten308
      fold acc(floatPerm(model), scale(1 * write / 2) * write)
      unfold acc(doublePerm(sol), scale(1 * write / 2) * write)
      flatten309 := ptrDeref(ptrAdd(optGet2(sol), t12696 * 4 + 3)).rat
      _305 := flatten309
      fold acc(doublePerm(sol), scale(1 * write / 2) * write)
      flatten310 := _305
      _306 := flatten310
      unfold acc(floatPerm(corModel26), write)
      flatten311 := _301 * _303 - _304 * _306
      ptrDeref(ptrAdd(optGet2(corModel26), corModel2S0Vis)).rat := flatten311
      fold acc(floatPerm(corModel26), write)
      unfold acc(floatPerm(model), scale(1 * write / 2) * write)
      flatten312 := ptrDeref(ptrAdd(optGet2(model), corModel2S0Vis * 8 + 7)).rat
      _307 := flatten312
      fold acc(floatPerm(model), scale(1 * write / 2) * write)
      unfold acc(doublePerm(sol), scale(1 * write / 2) * write)
      flatten313 := ptrDeref(ptrAdd(optGet2(sol), t12696 * 4 + 2)).rat
      _308 := flatten313
      fold acc(doublePerm(sol), scale(1 * write / 2) * write)
      flatten314 := _308
      _309 := flatten314
      unfold acc(floatPerm(model), scale(1 * write / 2) * write)
      flatten315 := ptrDeref(ptrAdd(optGet2(model), corModel2S0Vis * 8 + 6)).rat
      _310 := flatten315
      fold acc(floatPerm(model), scale(1 * write / 2) * write)
      unfold acc(doublePerm(sol), scale(1 * write / 2) * write)
      flatten316 := ptrDeref(ptrAdd(optGet2(sol), t12696 * 4 + 3)).rat
      _311 := flatten316
      fold acc(doublePerm(sol), scale(1 * write / 2) * write)
      flatten317 := _311
      _312 := flatten317
      unfold acc(floatPerm(corModel27), write)
      flatten318 := _307 * _309 + _310 * _312
      ptrDeref(ptrAdd(optGet2(corModel27), corModel2S0Vis)).rat := flatten318
      fold acc(floatPerm(corModel27), write)
      flatten259 := corModel2S0Vis
      corModel2S0Vis := corModel2S0Vis + 1
    }
    flatten319 := 230930
    _313 := flatten319
    res9 := make_pointer_array_float32(tid, _313)
    flatten320 := res9
    corModelTransp10 := flatten320
    fold acc(floatPerm(corModelTransp10), write)
    flatten321 := 230930
    _314 := flatten321
    res10 := make_pointer_array_float32(tid, _314)
    flatten322 := res10
    corModelTransp11 := flatten322
    fold acc(floatPerm(corModelTransp11), write)
    flatten323 := 230930
    _315 := flatten323
    res11 := make_pointer_array_float32(tid, _315)
    flatten324 := res11
    corModelTransp12 := flatten324
    fold acc(floatPerm(corModelTransp12), write)
    flatten325 := 230930
    _316 := flatten325
    res12 := make_pointer_array_float32(tid, _316)
    flatten326 := res12
    corModelTransp13 := flatten326
    fold acc(floatPerm(corModelTransp13), write)
    flatten327 := 230930
    _317 := flatten327
    res13 := make_pointer_array_float32(tid, _317)
    flatten328 := res13
    corModelTransp14 := flatten328
    fold acc(floatPerm(corModelTransp14), write)
    flatten329 := 230930
    _318 := flatten329
    res14 := make_pointer_array_float32(tid, _318)
    flatten330 := res14
    corModelTransp15 := flatten330
    fold acc(floatPerm(corModelTransp15), write)
    flatten331 := 230930
    _319 := flatten331
    res15 := make_pointer_array_float32(tid, _319)
    flatten332 := res15
    corModelTransp16 := flatten332
    fold acc(floatPerm(corModelTransp16), write)
    flatten333 := 230930
    _320 := flatten333
    res16 := make_pointer_array_float32(tid, _320)
    flatten334 := res16
    corModelTransp17 := flatten334
    fold acc(floatPerm(corModelTransp17), write)
    label LOOP1
    excbeforeloop1 := exc
    flatten335 := 0
    corModelTransp1S0Vis := flatten335
    while (corModelTransp1S0Vis < 230930)
      invariant exc == excbeforeloop1
      invariant 0 <= corModelTransp1S0Vis
      invariant corModelTransp1S0Vis < 230930 + 1
      invariant acc(intPermBound(ant2, 0, 50), scale(1 * write / 2) * write)
      invariant acc(floatPerm(model), scale(1 * write / 2) * write)
      invariant acc(doublePerm(sol), scale(1 * write / 2) * write)
      invariant acc(intPermBound(solutionMap, 0, 3), scale(1 * write / 2) *
        write)
      invariant acc(floatPerm(corModelTransp10), write)
      invariant acc(floatPerm(corModelTransp11), write)
      invariant acc(floatPerm(corModelTransp12), write)
      invariant acc(floatPerm(corModelTransp13), write)
      invariant acc(floatPerm(corModelTransp14), write)
      invariant acc(floatPerm(corModelTransp15), write)
      invariant acc(floatPerm(corModelTransp16), write)
      invariant acc(floatPerm(corModelTransp17), write) 
    {
      unfold acc(intPermBound(solutionMap, 0, 3), scale(1 * write / 2) *
        write)
      flatten337 := ptrDeref(ptrAdd(optGet2(solutionMap), corModelTransp1S0Vis)).int
      _321 := flatten337
      fold acc(intPermBound(solutionMap, 0, 3), scale(1 * write / 2) *
        write)
      unfold acc(intPermBound(ant2, 0, 50), scale(1 * write / 2) * write)
      flatten338 := ptrDeref(ptrAdd(optGet2(ant2), corModelTransp1S0Vis)).int
      _322 := flatten338
      fold acc(intPermBound(ant2, 0, 50), scale(1 * write / 2) * write)
      flatten339 := _321 + _322 * 8
      t12703 := flatten339
      unfold acc(floatPerm(model), scale(1 * write / 2) * write)
      flatten340 := ptrDeref(ptrAdd(optGet2(model), corModelTransp1S0Vis *
        8)).rat
      _323 := flatten340
      fold acc(floatPerm(model), scale(1 * write / 2) * write)
      unfold acc(doublePerm(sol), scale(1 * write / 2) * write)
      flatten341 := ptrDeref(ptrAdd(optGet2(sol), t12703 * 4)).rat
      _324 := flatten341
      fold acc(doublePerm(sol), scale(1 * write / 2) * write)
      flatten342 := _324
      _325 := flatten342
      unfold acc(floatPerm(model), scale(1 * write / 2) * write)
      flatten343 := ptrDeref(ptrAdd(optGet2(model), corModelTransp1S0Vis *
        8 +
        1)).rat
      _326 := flatten343
      fold acc(floatPerm(model), scale(1 * write / 2) * write)
      unfold acc(doublePerm(sol), scale(1 * write / 2) * write)
      flatten344 := ptrDeref(ptrAdd(optGet2(sol), t12703 * 4 + 1)).rat
      _327 := flatten344
      fold acc(doublePerm(sol), scale(1 * write / 2) * write)
      flatten345 := _327
      _328 := flatten345
      unfold acc(floatPerm(corModelTransp10), write)
      flatten346 := _323 * _325 - (0 * write / 1 - _326) * _328
      ptrDeref(ptrAdd(optGet2(corModelTransp10), corModelTransp1S0Vis)).rat := flatten346
      fold acc(floatPerm(corModelTransp10), write)
      unfold acc(floatPerm(model), scale(1 * write / 2) * write)
      flatten347 := ptrDeref(ptrAdd(optGet2(model), corModelTransp1S0Vis *
        8 +
        1)).rat
      _329 := flatten347
      fold acc(floatPerm(model), scale(1 * write / 2) * write)
      unfold acc(doublePerm(sol), scale(1 * write / 2) * write)
      flatten348 := ptrDeref(ptrAdd(optGet2(sol), t12703 * 4)).rat
      _330 := flatten348
      fold acc(doublePerm(sol), scale(1 * write / 2) * write)
      flatten349 := _330
      _331 := flatten349
      unfold acc(floatPerm(model), scale(1 * write / 2) * write)
      flatten350 := ptrDeref(ptrAdd(optGet2(model), corModelTransp1S0Vis *
        8)).rat
      _332 := flatten350
      fold acc(floatPerm(model), scale(1 * write / 2) * write)
      unfold acc(doublePerm(sol), scale(1 * write / 2) * write)
      flatten351 := ptrDeref(ptrAdd(optGet2(sol), t12703 * 4 + 1)).rat
      _333 := flatten351
      fold acc(doublePerm(sol), scale(1 * write / 2) * write)
      flatten352 := _333
      _334 := flatten352
      unfold acc(floatPerm(corModelTransp11), write)
      flatten353 := (0 * write / 1 - _329) * _331 + _332 * _334
      ptrDeref(ptrAdd(optGet2(corModelTransp11), corModelTransp1S0Vis)).rat := flatten353
      fold acc(floatPerm(corModelTransp11), write)
      unfold acc(floatPerm(model), scale(1 * write / 2) * write)
      flatten354 := ptrDeref(ptrAdd(optGet2(model), corModelTransp1S0Vis *
        8 +
        4)).rat
      _335 := flatten354
      fold acc(floatPerm(model), scale(1 * write / 2) * write)
      unfold acc(doublePerm(sol), scale(1 * write / 2) * write)
      flatten355 := ptrDeref(ptrAdd(optGet2(sol), t12703 * 4)).rat
      _336 := flatten355
      fold acc(doublePerm(sol), scale(1 * write / 2) * write)
      flatten356 := _336
      _337 := flatten356
      unfold acc(floatPerm(model), scale(1 * write / 2) * write)
      flatten357 := ptrDeref(ptrAdd(optGet2(model), corModelTransp1S0Vis *
        8 +
        5)).rat
      _338 := flatten357
      fold acc(floatPerm(model), scale(1 * write / 2) * write)
      unfold acc(doublePerm(sol), scale(1 * write / 2) * write)
      flatten358 := ptrDeref(ptrAdd(optGet2(sol), t12703 * 4 + 1)).rat
      _339 := flatten358
      fold acc(doublePerm(sol), scale(1 * write / 2) * write)
      flatten359 := _339
      _340 := flatten359
      unfold acc(floatPerm(corModelTransp12), write)
      flatten360 := _335 * _337 - (0 * write / 1 - _338) * _340
      ptrDeref(ptrAdd(optGet2(corModelTransp12), corModelTransp1S0Vis)).rat := flatten360
      fold acc(floatPerm(corModelTransp12), write)
      unfold acc(floatPerm(model), scale(1 * write / 2) * write)
      flatten361 := ptrDeref(ptrAdd(optGet2(model), corModelTransp1S0Vis *
        8 +
        5)).rat
      _341 := flatten361
      fold acc(floatPerm(model), scale(1 * write / 2) * write)
      unfold acc(doublePerm(sol), scale(1 * write / 2) * write)
      flatten362 := ptrDeref(ptrAdd(optGet2(sol), t12703 * 4)).rat
      _342 := flatten362
      fold acc(doublePerm(sol), scale(1 * write / 2) * write)
      flatten363 := _342
      _343 := flatten363
      unfold acc(floatPerm(model), scale(1 * write / 2) * write)
      flatten364 := ptrDeref(ptrAdd(optGet2(model), corModelTransp1S0Vis *
        8 +
        4)).rat
      _344 := flatten364
      fold acc(floatPerm(model), scale(1 * write / 2) * write)
      unfold acc(doublePerm(sol), scale(1 * write / 2) * write)
      flatten365 := ptrDeref(ptrAdd(optGet2(sol), t12703 * 4 + 1)).rat
      _345 := flatten365
      fold acc(doublePerm(sol), scale(1 * write / 2) * write)
      flatten366 := _345
      _346 := flatten366
      unfold acc(floatPerm(corModelTransp13), write)
      flatten367 := (0 * write / 1 - _341) * _343 + _344 * _346
      ptrDeref(ptrAdd(optGet2(corModelTransp13), corModelTransp1S0Vis)).rat := flatten367
      fold acc(floatPerm(corModelTransp13), write)
      unfold acc(floatPerm(model), scale(1 * write / 2) * write)
      flatten368 := ptrDeref(ptrAdd(optGet2(model), corModelTransp1S0Vis *
        8 +
        2)).rat
      _347 := flatten368
      fold acc(floatPerm(model), scale(1 * write / 2) * write)
      unfold acc(doublePerm(sol), scale(1 * write / 2) * write)
      flatten369 := ptrDeref(ptrAdd(optGet2(sol), t12703 * 4 + 2)).rat
      _348 := flatten369
      fold acc(doublePerm(sol), scale(1 * write / 2) * write)
      flatten370 := _348
      _349 := flatten370
      unfold acc(floatPerm(model), scale(1 * write / 2) * write)
      flatten371 := ptrDeref(ptrAdd(optGet2(model), corModelTransp1S0Vis *
        8 +
        3)).rat
      _350 := flatten371
      fold acc(floatPerm(model), scale(1 * write / 2) * write)
      unfold acc(doublePerm(sol), scale(1 * write / 2) * write)
      flatten372 := ptrDeref(ptrAdd(optGet2(sol), t12703 * 4 + 3)).rat
      _351 := flatten372
      fold acc(doublePerm(sol), scale(1 * write / 2) * write)
      flatten373 := _351
      _352 := flatten373
      unfold acc(floatPerm(corModelTransp14), write)
      flatten374 := _347 * _349 - (0 * write / 1 - _350) * _352
      ptrDeref(ptrAdd(optGet2(corModelTransp14), corModelTransp1S0Vis)).rat := flatten374
      fold acc(floatPerm(corModelTransp14), write)
      unfold acc(floatPerm(model), scale(1 * write / 2) * write)
      flatten375 := ptrDeref(ptrAdd(optGet2(model), corModelTransp1S0Vis *
        8 +
        3)).rat
      _353 := flatten375
      fold acc(floatPerm(model), scale(1 * write / 2) * write)
      unfold acc(doublePerm(sol), scale(1 * write / 2) * write)
      flatten376 := ptrDeref(ptrAdd(optGet2(sol), t12703 * 4 + 2)).rat
      _354 := flatten376
      fold acc(doublePerm(sol), scale(1 * write / 2) * write)
      flatten377 := _354
      _355 := flatten377
      unfold acc(floatPerm(model), scale(1 * write / 2) * write)
      flatten378 := ptrDeref(ptrAdd(optGet2(model), corModelTransp1S0Vis *
        8 +
        2)).rat
      _356 := flatten378
      fold acc(floatPerm(model), scale(1 * write / 2) * write)
      unfold acc(doublePerm(sol), scale(1 * write / 2) * write)
      flatten379 := ptrDeref(ptrAdd(optGet2(sol), t12703 * 4 + 3)).rat
      _357 := flatten379
      fold acc(doublePerm(sol), scale(1 * write / 2) * write)
      flatten380 := _357
      _358 := flatten380
      unfold acc(floatPerm(corModelTransp15), write)
      flatten381 := (0 * write / 1 - _353) * _355 + _356 * _358
      ptrDeref(ptrAdd(optGet2(corModelTransp15), corModelTransp1S0Vis)).rat := flatten381
      fold acc(floatPerm(corModelTransp15), write)
      unfold acc(floatPerm(model), scale(1 * write / 2) * write)
      flatten382 := ptrDeref(ptrAdd(optGet2(model), corModelTransp1S0Vis *
        8 +
        6)).rat
      _359 := flatten382
      fold acc(floatPerm(model), scale(1 * write / 2) * write)
      unfold acc(doublePerm(sol), scale(1 * write / 2) * write)
      flatten383 := ptrDeref(ptrAdd(optGet2(sol), t12703 * 4 + 2)).rat
      _360 := flatten383
      fold acc(doublePerm(sol), scale(1 * write / 2) * write)
      flatten384 := _360
      _361 := flatten384
      unfold acc(floatPerm(model), scale(1 * write / 2) * write)
      flatten385 := ptrDeref(ptrAdd(optGet2(model), corModelTransp1S0Vis *
        8 +
        7)).rat
      _362 := flatten385
      fold acc(floatPerm(model), scale(1 * write / 2) * write)
      unfold acc(doublePerm(sol), scale(1 * write / 2) * write)
      flatten386 := ptrDeref(ptrAdd(optGet2(sol), t12703 * 4 + 3)).rat
      _363 := flatten386
      fold acc(doublePerm(sol), scale(1 * write / 2) * write)
      flatten387 := _363
      _364 := flatten387
      unfold acc(floatPerm(corModelTransp16), write)
      flatten388 := _359 * _361 - (0 * write / 1 - _362) * _364
      ptrDeref(ptrAdd(optGet2(corModelTransp16), corModelTransp1S0Vis)).rat := flatten388
      fold acc(floatPerm(corModelTransp16), write)
      unfold acc(floatPerm(model), scale(1 * write / 2) * write)
      flatten389 := ptrDeref(ptrAdd(optGet2(model), corModelTransp1S0Vis *
        8 +
        7)).rat
      _365 := flatten389
      fold acc(floatPerm(model), scale(1 * write / 2) * write)
      unfold acc(doublePerm(sol), scale(1 * write / 2) * write)
      flatten390 := ptrDeref(ptrAdd(optGet2(sol), t12703 * 4 + 2)).rat
      _366 := flatten390
      fold acc(doublePerm(sol), scale(1 * write / 2) * write)
      flatten391 := _366
      _367 := flatten391
      unfold acc(floatPerm(model), scale(1 * write / 2) * write)
      flatten392 := ptrDeref(ptrAdd(optGet2(model), corModelTransp1S0Vis *
        8 +
        6)).rat
      _368 := flatten392
      fold acc(floatPerm(model), scale(1 * write / 2) * write)
      unfold acc(doublePerm(sol), scale(1 * write / 2) * write)
      flatten393 := ptrDeref(ptrAdd(optGet2(sol), t12703 * 4 + 3)).rat
      _369 := flatten393
      fold acc(doublePerm(sol), scale(1 * write / 2) * write)
      flatten394 := _369
      _370 := flatten394
      unfold acc(floatPerm(corModelTransp17), write)
      flatten395 := (0 * write / 1 - _365) * _367 + _368 * _370
      ptrDeref(ptrAdd(optGet2(corModelTransp17), corModelTransp1S0Vis)).rat := flatten395
      fold acc(floatPerm(corModelTransp17), write)
      flatten336 := corModelTransp1S0Vis
      corModelTransp1S0Vis := corModelTransp1S0Vis + 1
    }
    res17 := make_pointer_array_float32(tid, 300)
    flatten396 := res17
    denominator1 := flatten396
    fold acc(floatPerm(denominator1), write)
    label LOOP2
    excbeforeloop2 := exc
    flatten397 := 0
    denominator1S0A := flatten397
    while (denominator1S0A < 50)
      invariant exc == excbeforeloop2
      invariant 0 <= denominator1S0A
      invariant denominator1S0A < 50 + 1
      invariant acc(floatPerm(denominator1), write) 
    {
      flatten399 := denominator1S0A * 6
      t12735 := flatten399
      label LOOP3
      excbeforeloop3 := exc
      flatten400 := 0
      denominator1S0Si := flatten400
      while (denominator1S0Si < 3)
        invariant exc == excbeforeloop3
        invariant 0 <= denominator1S0Si
        invariant denominator1S0Si < 3 + 1
        invariant acc(floatPerm(denominator1), write) 
      {
        flatten402 := denominator1S0Si * 2 + t12735
        t12736 := flatten402
        label LOOP4
        excbeforeloop4 := exc
        flatten403 := 0
        denominator1S0I := flatten403
        while (denominator1S0I < 2)
          invariant exc == excbeforeloop4
          invariant 0 <= denominator1S0I
          invariant denominator1S0I < 2 + 1
          invariant acc(floatPerm(denominator1), write) 
        {
          unfold acc(floatPerm(denominator1), write)
          flatten405 := denominator1S0I + t12736
          flatten406 := 0 * write / 1
          ptrDeref(ptrAdd(optGet2(denominator1), flatten405)).rat := flatten406
          fold acc(floatPerm(denominator1), write)
          flatten404 := denominator1S0I
          denominator1S0I := denominator1S0I + 1
        }
        flatten401 := denominator1S0Si
        denominator1S0Si := denominator1S0Si + 1
      }
      flatten398 := denominator1S0A
      denominator1S0A := denominator1S0A + 1
    }
    label LOOP5
    excbeforeloop5 := exc
    flatten407 := 0
    denominator1S1I := flatten407
    while (denominator1S1I < 2)
      invariant exc == excbeforeloop5
      invariant 0 <= denominator1S1I
      invariant denominator1S1I < 2 + 1
      invariant acc(intPermBound(ant1, 0, 50), scale(1 * write / 2) * write)
      invariant acc(intPermBound(ant2, 0, 50), scale(1 * write / 2) * write)
      invariant acc(intPermBound(solutionMap, 0, 3), scale(1 * write / 2) *
        write)
      invariant acc(floatPerm(corModel20), scale(1 * write / 2) * write)
      invariant acc(floatPerm(corModel21), scale(1 * write / 2) * write)
      invariant acc(floatPerm(corModel22), scale(1 * write / 2) * write)
      invariant acc(floatPerm(corModel23), scale(1 * write / 2) * write)
      invariant acc(floatPerm(corModel24), scale(1 * write / 2) * write)
      invariant acc(floatPerm(corModel25), scale(1 * write / 2) * write)
      invariant acc(floatPerm(corModel26), scale(1 * write / 2) * write)
      invariant acc(floatPerm(corModel27), scale(1 * write / 2) * write)
      invariant acc(floatPerm(corModelTransp10), scale(1 * write / 2) *
        write)
      invariant acc(floatPerm(corModelTransp11), scale(1 * write / 2) *
        write)
      invariant acc(floatPerm(corModelTransp12), scale(1 * write / 2) *
        write)
      invariant acc(floatPerm(corModelTransp13), scale(1 * write / 2) *
        write)
      invariant acc(floatPerm(corModelTransp14), scale(1 * write / 2) *
        write)
      invariant acc(floatPerm(corModelTransp15), scale(1 * write / 2) *
        write)
      invariant acc(floatPerm(corModelTransp16), scale(1 * write / 2) *
        write)
      invariant acc(floatPerm(corModelTransp17), scale(1 * write / 2) *
        write)
      invariant acc(floatPerm(denominator1), write) 
    {
      label LOOP6
      excbeforeloop6 := exc
      flatten409 := 0
      denominator1S1Rv2Y := flatten409
      while (denominator1S1Rv2Y < 230930)
        invariant exc == excbeforeloop6
        invariant 0 <= denominator1S1Rv2Y
        invariant denominator1S1Rv2Y < 230930 + 1
        invariant acc(intPermBound(ant1, 0, 50), scale(1 * write / 2) *
          write)
        invariant acc(intPermBound(ant2, 0, 50), scale(1 * write / 2) *
          write)
        invariant acc(intPermBound(solutionMap, 0, 3), scale(1 * write / 2) *
          write)
        invariant acc(floatPerm(corModel20), scale(1 * write / 2) * write)
        invariant acc(floatPerm(corModel21), scale(1 * write / 2) * write)
        invariant acc(floatPerm(corModel22), scale(1 * write / 2) * write)
        invariant acc(floatPerm(corModel23), scale(1 * write / 2) * write)
        invariant acc(floatPerm(corModel24), scale(1 * write / 2) * write)
        invariant acc(floatPerm(corModel25), scale(1 * write / 2) * write)
        invariant acc(floatPerm(corModel26), scale(1 * write / 2) * write)
        invariant acc(floatPerm(corModel27), scale(1 * write / 2) * write)
        invariant acc(floatPerm(corModelTransp10), scale(1 * write / 2) *
          write)
        invariant acc(floatPerm(corModelTransp11), scale(1 * write / 2) *
          write)
        invariant acc(floatPerm(corModelTransp12), scale(1 * write / 2) *
          write)
        invariant acc(floatPerm(corModelTransp13), scale(1 * write / 2) *
          write)
        invariant acc(floatPerm(corModelTransp14), scale(1 * write / 2) *
          write)
        invariant acc(floatPerm(corModelTransp15), scale(1 * write / 2) *
          write)
        invariant acc(floatPerm(corModelTransp16), scale(1 * write / 2) *
          write)
        invariant acc(floatPerm(corModelTransp17), scale(1 * write / 2) *
          write)
        invariant acc(floatPerm(denominator1), write) 
      {
        label LOOP7
        excbeforeloop7 := exc
        flatten411 := 0
        denominator1S1Rv2X := flatten411
        while (denominator1S1Rv2X < 2)
          invariant exc == excbeforeloop7
          invariant 0 <= denominator1S1Rv2X
          invariant denominator1S1Rv2X < 2 + 1
          invariant acc(intPermBound(ant1, 0, 50), scale(1 * write / 2) *
            write)
          invariant acc(intPermBound(ant2, 0, 50), scale(1 * write / 2) *
            write)
          invariant acc(intPermBound(solutionMap, 0, 3), scale(1 * write /
            2) *
            write)
          invariant acc(floatPerm(corModel20), scale(1 * write / 2) * write)
          invariant acc(floatPerm(corModel21), scale(1 * write / 2) * write)
          invariant acc(floatPerm(corModel22), scale(1 * write / 2) * write)
          invariant acc(floatPerm(corModel23), scale(1 * write / 2) * write)
          invariant acc(floatPerm(corModel24), scale(1 * write / 2) * write)
          invariant acc(floatPerm(corModel25), scale(1 * write / 2) * write)
          invariant acc(floatPerm(corModel26), scale(1 * write / 2) * write)
          invariant acc(floatPerm(corModel27), scale(1 * write / 2) * write)
          invariant acc(floatPerm(corModelTransp10), scale(1 * write / 2) *
            write)
          invariant acc(floatPerm(corModelTransp11), scale(1 * write / 2) *
            write)
          invariant acc(floatPerm(corModelTransp12), scale(1 * write / 2) *
            write)
          invariant acc(floatPerm(corModelTransp13), scale(1 * write / 2) *
            write)
          invariant acc(floatPerm(corModelTransp14), scale(1 * write / 2) *
            write)
          invariant acc(floatPerm(corModelTransp15), scale(1 * write / 2) *
            write)
          invariant acc(floatPerm(corModelTransp16), scale(1 * write / 2) *
            write)
          invariant acc(floatPerm(corModelTransp17), scale(1 * write / 2) *
            write)
          invariant acc(floatPerm(denominator1), write) 
        {
          res18 := make_pointer_array_float32(tid, 4)
          flatten413 := res18
          denominatorInter1 := flatten413
          unfold acc(floatPerm(corModelTransp10), scale(1 * write / 2) *
            write)
          flatten414 := ptrDeref(ptrAdd(optGet2(corModelTransp10), denominator1S1Rv2Y)).rat
          _371 := flatten414
          fold acc(floatPerm(corModelTransp10), scale(1 * write / 2) *
            write)
          t12524 := _371
          unfold acc(floatPerm(corModelTransp11), scale(1 * write / 2) *
            write)
          flatten415 := ptrDeref(ptrAdd(optGet2(corModelTransp11), denominator1S1Rv2Y)).rat
          _372 := flatten415
          fold acc(floatPerm(corModelTransp11), scale(1 * write / 2) *
            write)
          t12525 := _372
          unfold acc(floatPerm(corModelTransp14), scale(1 * write / 2) *
            write)
          flatten416 := ptrDeref(ptrAdd(optGet2(corModelTransp14), denominator1S1Rv2Y)).rat
          _373 := flatten416
          fold acc(floatPerm(corModelTransp14), scale(1 * write / 2) *
            write)
          t12526 := _373
          unfold acc(floatPerm(corModelTransp15), scale(1 * write / 2) *
            write)
          flatten417 := ptrDeref(ptrAdd(optGet2(corModelTransp15), denominator1S1Rv2Y)).rat
          _374 := flatten417
          fold acc(floatPerm(corModelTransp15), scale(1 * write / 2) *
            write)
          t12527 := _374
          flatten418 := 0
          flatten419 := t12524 * t12524 + t12525 * t12525 +
            (t12526 * t12526 + t12527 * t12527)
          ptrDeref(ptrAdd(optGet2(denominatorInter1), flatten418)).rat := flatten419
          unfold acc(floatPerm(corModelTransp12), scale(1 * write / 2) *
            write)
          flatten420 := ptrDeref(ptrAdd(optGet2(corModelTransp12), denominator1S1Rv2Y)).rat
          _375 := flatten420
          fold acc(floatPerm(corModelTransp12), scale(1 * write / 2) *
            write)
          t12528 := _375
          unfold acc(floatPerm(corModelTransp13), scale(1 * write / 2) *
            write)
          flatten421 := ptrDeref(ptrAdd(optGet2(corModelTransp13), denominator1S1Rv2Y)).rat
          _376 := flatten421
          fold acc(floatPerm(corModelTransp13), scale(1 * write / 2) *
            write)
          t12529 := _376
          unfold acc(floatPerm(corModelTransp16), scale(1 * write / 2) *
            write)
          flatten422 := ptrDeref(ptrAdd(optGet2(corModelTransp16), denominator1S1Rv2Y)).rat
          _377 := flatten422
          fold acc(floatPerm(corModelTransp16), scale(1 * write / 2) *
            write)
          t12530 := _377
          unfold acc(floatPerm(corModelTransp17), scale(1 * write / 2) *
            write)
          flatten423 := ptrDeref(ptrAdd(optGet2(corModelTransp17), denominator1S1Rv2Y)).rat
          _378 := flatten423
          fold acc(floatPerm(corModelTransp17), scale(1 * write / 2) *
            write)
          t12531 := _378
          flatten424 := 2
          flatten425 := t12528 * t12528 + t12529 * t12529 +
            (t12530 * t12530 + t12531 * t12531)
          ptrDeref(ptrAdd(optGet2(denominatorInter1), flatten424)).rat := flatten425
          unfold acc(floatPerm(corModel20), scale(1 * write / 2) * write)
          flatten426 := ptrDeref(ptrAdd(optGet2(corModel20), denominator1S1Rv2Y)).rat
          _379 := flatten426
          fold acc(floatPerm(corModel20), scale(1 * write / 2) * write)
          t12532 := _379
          unfold acc(floatPerm(corModel21), scale(1 * write / 2) * write)
          flatten427 := ptrDeref(ptrAdd(optGet2(corModel21), denominator1S1Rv2Y)).rat
          _380 := flatten427
          fold acc(floatPerm(corModel21), scale(1 * write / 2) * write)
          t12533 := _380
          unfold acc(floatPerm(corModel24), scale(1 * write / 2) * write)
          flatten428 := ptrDeref(ptrAdd(optGet2(corModel24), denominator1S1Rv2Y)).rat
          _381 := flatten428
          fold acc(floatPerm(corModel24), scale(1 * write / 2) * write)
          t12534 := _381
          unfold acc(floatPerm(corModel25), scale(1 * write / 2) * write)
          flatten429 := ptrDeref(ptrAdd(optGet2(corModel25), denominator1S1Rv2Y)).rat
          _382 := flatten429
          fold acc(floatPerm(corModel25), scale(1 * write / 2) * write)
          t12535 := _382
          flatten430 := 1
          flatten431 := t12532 * t12532 + t12533 * t12533 +
            (t12534 * t12534 + t12535 * t12535)
          ptrDeref(ptrAdd(optGet2(denominatorInter1), flatten430)).rat := flatten431
          unfold acc(floatPerm(corModel22), scale(1 * write / 2) * write)
          flatten432 := ptrDeref(ptrAdd(optGet2(corModel22), denominator1S1Rv2Y)).rat
          _383 := flatten432
          fold acc(floatPerm(corModel22), scale(1 * write / 2) * write)
          t12536 := _383
          unfold acc(floatPerm(corModel23), scale(1 * write / 2) * write)
          flatten433 := ptrDeref(ptrAdd(optGet2(corModel23), denominator1S1Rv2Y)).rat
          _384 := flatten433
          fold acc(floatPerm(corModel23), scale(1 * write / 2) * write)
          t12537 := _384
          unfold acc(floatPerm(corModel26), scale(1 * write / 2) * write)
          flatten434 := ptrDeref(ptrAdd(optGet2(corModel26), denominator1S1Rv2Y)).rat
          _385 := flatten434
          fold acc(floatPerm(corModel26), scale(1 * write / 2) * write)
          t12538 := _385
          unfold acc(floatPerm(corModel27), scale(1 * write / 2) * write)
          flatten435 := ptrDeref(ptrAdd(optGet2(corModel27), denominator1S1Rv2Y)).rat
          _386 := flatten435
          fold acc(floatPerm(corModel27), scale(1 * write / 2) * write)
          t12539 := _386
          flatten436 := 3
          flatten437 := t12536 * t12536 + t12537 * t12537 +
            (t12538 * t12538 + t12539 * t12539)
          ptrDeref(ptrAdd(optGet2(denominatorInter1), flatten436)).rat := flatten437
          unfold acc(intPermBound(ant1, 0, 50), scale(1 * write / 2) *
            write)
          flatten438 := ptrDeref(ptrAdd(optGet2(ant1), denominator1S1Rv2Y)).int
          _387 := flatten438
          fold acc(intPermBound(ant1, 0, 50), scale(1 * write / 2) * write)
          unfold acc(intPermBound(ant2, 0, 50), scale(1 * write / 2) *
            write)
          flatten439 := ptrDeref(ptrAdd(optGet2(ant2), denominator1S1Rv2Y)).int
          _388 := flatten439
          fold acc(intPermBound(ant2, 0, 50), scale(1 * write / 2) * write)
          unfold acc(intPermBound(solutionMap, 0, 3), scale(1 * write / 2) *
            write)
          flatten440 := ptrDeref(ptrAdd(optGet2(solutionMap), denominator1S1Rv2Y)).int
          _389 := flatten440
          fold acc(intPermBound(solutionMap, 0, 3), scale(1 * write / 2) *
            write)
          flatten441 := (denominator1S1Rv2X == 0 ? _387 : _388) * 6 +
            (_389 * 2 + denominator1S1I)
          t12540 := flatten441
          unfold acc(floatPerm(denominator1), write)
          flatten442 := ptrDeref(ptrAdd(optGet2(denominator1), t12540)).rat
          _390 := flatten442
          flatten443 := ptrDeref(ptrAdd(optGet2(denominatorInter1), denominator1S1I *
            2 +
            denominator1S1Rv2X)).rat
          _391 := flatten443
          flatten444 := _390 + _391
          ptrDeref(ptrAdd(optGet2(denominator1), t12540)).rat := flatten444
          fold acc(floatPerm(denominator1), write)
          flatten412 := denominator1S1Rv2X
          denominator1S1Rv2X := denominator1S1Rv2X + 1
        }
        flatten410 := denominator1S1Rv2Y
        denominator1S1Rv2Y := denominator1S1Rv2Y + 1
      }
      flatten408 := denominator1S1I
      denominator1S1I := denominator1S1I + 1
    }
    res19 := make_pointer_array_float32(tid, 150)
    flatten445 := res19
    numerator10 := flatten445
    fold acc(floatPerm(numerator10), write)
    res20 := make_pointer_array_float32(tid, 150)
    flatten446 := res20
    numerator11 := flatten446
    fold acc(floatPerm(numerator11), write)
    res21 := make_pointer_array_float32(tid, 150)
    flatten447 := res21
    numerator12 := flatten447
    fold acc(floatPerm(numerator12), write)
    res22 := make_pointer_array_float32(tid, 150)
    flatten448 := res22
    numerator13 := flatten448
    fold acc(floatPerm(numerator13), write)
    label LOOP8
    excbeforeloop8 := exc
    flatten449 := 0
    numerator1S0A := flatten449
    while (numerator1S0A < 50)
      invariant exc == excbeforeloop8
      invariant 0 <= numerator1S0A
      invariant numerator1S0A < 50 + 1
      invariant acc(floatPerm(numerator10), write)
      invariant acc(floatPerm(numerator11), write)
      invariant acc(floatPerm(numerator12), write)
      invariant acc(floatPerm(numerator13), write) 
    {
      flatten451 := numerator1S0A * 3
      t12739 := flatten451
      label LOOP9
      excbeforeloop9 := exc
      flatten452 := 0
      numerator1S0Si := flatten452
      while (numerator1S0Si < 3)
        invariant exc == excbeforeloop9
        invariant 0 <= numerator1S0Si
        invariant numerator1S0Si < 3 + 1
        invariant acc(floatPerm(numerator10), write)
        invariant acc(floatPerm(numerator11), write)
        invariant acc(floatPerm(numerator12), write)
        invariant acc(floatPerm(numerator13), write) 
      {
        unfold acc(floatPerm(numerator10), write)
        flatten454 := numerator1S0Si + t12739
        flatten455 := 0 * write / 1
        ptrDeref(ptrAdd(optGet2(numerator10), flatten454)).rat := flatten455
        fold acc(floatPerm(numerator10), write)
        unfold acc(floatPerm(numerator11), write)
        flatten456 := numerator1S0Si + t12739
        flatten457 := 0 * write / 1
        ptrDeref(ptrAdd(optGet2(numerator11), flatten456)).rat := flatten457
        fold acc(floatPerm(numerator11), write)
        unfold acc(floatPerm(numerator12), write)
        flatten458 := numerator1S0Si + t12739
        flatten459 := 0 * write / 1
        ptrDeref(ptrAdd(optGet2(numerator12), flatten458)).rat := flatten459
        fold acc(floatPerm(numerator12), write)
        unfold acc(floatPerm(numerator13), write)
        flatten460 := numerator1S0Si + t12739
        flatten461 := 0 * write / 1
        ptrDeref(ptrAdd(optGet2(numerator13), flatten460)).rat := flatten461
        fold acc(floatPerm(numerator13), write)
        flatten453 := numerator1S0Si
        numerator1S0Si := numerator1S0Si + 1
      }
      flatten450 := numerator1S0A
      numerator1S0A := numerator1S0A + 1
    }
    label LOOP10
    excbeforeloop10 := exc
    flatten462 := 0
    numerator1S1Rv2Y := flatten462
    while (numerator1S1Rv2Y < 230930)
      invariant exc == excbeforeloop10
      invariant 0 <= numerator1S1Rv2Y
      invariant numerator1S1Rv2Y < 230930 + 1
      invariant acc(intPermBound(ant1, 0, 50), scale(1 * write / 2) * write)
      invariant acc(intPermBound(ant2, 0, 50), scale(1 * write / 2) * write)
      invariant acc(floatPerm(model), scale(1 * write / 2) * write)
      invariant acc(doublePerm(sol), scale(1 * write / 2) * write)
      invariant acc(intPermBound(solutionMap, 0, 3), scale(1 * write / 2) *
        write)
      invariant acc(floatPerm(vResIn), scale(1 * write / 2) * write)
      invariant acc(floatPerm(numerator10), write)
      invariant acc(floatPerm(numerator11), write)
      invariant acc(floatPerm(numerator12), write)
      invariant acc(floatPerm(numerator13), write)
      invariant acc(floatPerm(corModel20), scale(1 * write / 2) * write)
      invariant acc(floatPerm(corModelTransp10), scale(1 * write / 2) *
        write) 
    {
      label LOOP11
      excbeforeloop11 := exc
      flatten464 := 0
      numerator1S1Rv2X := flatten464
      while (numerator1S1Rv2X < 2)
        invariant exc == excbeforeloop11
        invariant 0 <= numerator1S1Rv2X
        invariant numerator1S1Rv2X < 2 + 1
        invariant acc(intPermBound(ant1, 0, 50), scale(1 * write / 2) *
          write)
        invariant acc(intPermBound(ant2, 0, 50), scale(1 * write / 2) *
          write)
        invariant acc(floatPerm(model), scale(1 * write / 2) * write)
        invariant acc(doublePerm(sol), scale(1 * write / 2) * write)
        invariant acc(intPermBound(solutionMap, 0, 3), scale(1 * write / 2) *
          write)
        invariant acc(floatPerm(vResIn), scale(1 * write / 2) * write)
        invariant acc(floatPerm(numerator10), write)
        invariant acc(floatPerm(numerator11), write)
        invariant acc(floatPerm(numerator12), write)
        invariant acc(floatPerm(numerator13), write)
        invariant acc(floatPerm(corModel20), scale(1 * write / 2) * write)
        invariant acc(floatPerm(corModelTransp10), scale(1 * write / 2) *
          write) 
      {
        res23 := make_pointer_array_float32(tid, 2)
        flatten466 := res23
        numeratorInter10 := flatten466
        res24 := make_pointer_array_float32(tid, 2)
        flatten467 := res24
        numeratorInter11 := flatten467
        res25 := make_pointer_array_float32(tid, 2)
        flatten468 := res25
        numeratorInter12 := flatten468
        res26 := make_pointer_array_float32(tid, 2)
        flatten469 := res26
        numeratorInter13 := flatten469
        flatten465 := numerator1S1Rv2X
        numerator1S1Rv2X := numerator1S1Rv2X + 1
      }
      flatten463 := numerator1S1Rv2Y
      numerator1S1Rv2Y := numerator1S1Rv2Y + 1
    }
    label LOOP12
    excbeforeloop12 := exc
    flatten470 := 0
    nextSolutionsComplexS0A := flatten470
    while (nextSolutionsComplexS0A < 50)
      invariant exc == excbeforeloop12
      invariant 0 <= nextSolutionsComplexS0A
      invariant nextSolutionsComplexS0A < 50 + 1
      invariant acc(floatPerm(denominator1), scale(1 * write / 2) * write)
      invariant acc(floatPerm(numerator10), scale(1 * write / 2) * write)
      invariant acc(floatPerm(numerator11), scale(1 * write / 2) * write)
      invariant acc(floatPerm(numerator12), scale(1 * write / 2) * write)
      invariant acc(floatPerm(numerator13), scale(1 * write / 2) * write)
      invariant acc(doublePerm(nextSolutionsComplex), write) 
    {
      flatten472 := nextSolutionsComplexS0A * 32
      t12742 := flatten472
      flatten473 := nextSolutionsComplexS0A * 3
      t12741 := flatten473
      label LOOP13
      excbeforeloop13 := exc
      flatten474 := 0
      nextSolutionsComplexS0Si := flatten474
      while (nextSolutionsComplexS0Si < 3)
        invariant exc == excbeforeloop13
        invariant 0 <= nextSolutionsComplexS0Si
        invariant nextSolutionsComplexS0Si < 3 + 1
        invariant acc(floatPerm(denominator1), scale(1 * write / 2) * write)
        invariant acc(floatPerm(numerator10), scale(1 * write / 2) * write)
        invariant acc(floatPerm(numerator11), scale(1 * write / 2) * write)
        invariant acc(floatPerm(numerator12), scale(1 * write / 2) * write)
        invariant acc(floatPerm(numerator13), scale(1 * write / 2) * write)
        invariant acc(doublePerm(nextSolutionsComplex), write) 
      {
        flatten476 := nextSolutionsComplexS0Si + t12741
        t12746 := flatten476
        flatten477 := nextSolutionsComplexS0Si * 4 + t12742
        t12745 := flatten477
        label LOOP14
        excbeforeloop14 := exc
        flatten478 := 0
        nextSolutionsComplexS0Pol := flatten478
        while (nextSolutionsComplexS0Pol < 2)
          invariant exc == excbeforeloop14
          invariant 0 <= nextSolutionsComplexS0Pol
          invariant nextSolutionsComplexS0Pol < 2 + 1
          invariant acc(floatPerm(denominator1), scale(1 * write / 2) *
            write)
          invariant acc(floatPerm(numerator10), scale(1 * write / 2) *
            write)
          invariant acc(floatPerm(numerator11), scale(1 * write / 2) *
            write)
          invariant acc(floatPerm(numerator12), scale(1 * write / 2) *
            write)
          invariant acc(floatPerm(numerator13), scale(1 * write / 2) *
            write)
          invariant acc(doublePerm(nextSolutionsComplex), write) 
        {
          flatten480 := nextSolutionsComplexS0Pol == 0
          t12748 := flatten480
          flatten481 := nextSolutionsComplexS0Pol * 2 + t12745
          t12749 := flatten481
          label LOOP15
          excbeforeloop15 := exc
          flatten482 := 0
          nextSolutionsComplexS0C := flatten482
          while (nextSolutionsComplexS0C < 2)
            invariant exc == excbeforeloop15
            invariant 0 <= nextSolutionsComplexS0C
            invariant nextSolutionsComplexS0C < 2 + 1
            invariant acc(floatPerm(denominator1), scale(1 * write / 2) *
              write)
            invariant acc(floatPerm(numerator10), scale(1 * write / 2) *
              write)
            invariant acc(floatPerm(numerator11), scale(1 * write / 2) *
              write)
            invariant acc(floatPerm(numerator12), scale(1 * write / 2) *
              write)
            invariant acc(floatPerm(numerator13), scale(1 * write / 2) *
              write)
            invariant acc(doublePerm(nextSolutionsComplex), write) 
          {
            res27 := make_pointer_array_float32(tid, 2)
            flatten484 := res27
            nextSolutionsInter0 := flatten484
            res28 := make_pointer_array_float32(tid, 2)
            flatten485 := res28
            nextSolutionsInter1 := flatten485
            flatten483 := nextSolutionsComplexS0C
            nextSolutionsComplexS0C := nextSolutionsComplexS0C + 1
          }
          flatten479 := nextSolutionsComplexS0Pol
          nextSolutionsComplexS0Pol := nextSolutionsComplexS0Pol + 1
        }
        flatten475 := nextSolutionsComplexS0Si
        nextSolutionsComplexS0Si := nextSolutionsComplexS0Si + 1
      }
      flatten471 := nextSolutionsComplexS0A
      nextSolutionsComplexS0A := nextSolutionsComplexS0A + 1
    }
    flatten486 := 0
    return := flatten486
    goto END
    label END
    res := return
    label BUBBLE
    assert exc == null
  }
}